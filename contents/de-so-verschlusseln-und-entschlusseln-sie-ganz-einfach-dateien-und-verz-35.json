{"title":"So verschlüsseln und entschlüsseln Sie ganz einfach Dateien und Verzeichnisse unter Linux","content":"<p> Wollten Sie schon immer Dateien unter Linux schnell und einfach verschlüsseln, ohne neue Softwarepakete installieren und lernen zu müssen? Hier ist eine hervorragende und einfache Möglichkeit, Dateien oder Verzeichnisse einfach über AES256 mit einem Kennwort zu verschlüsseln, um Ihre Dateien vor neugierigen Blicken zu schützen. </p> <h2 id=\"the-basics-of-encryption-with-openssl\"> Die Grundlagen der Verschlüsselung mit OpenSSL </h2> <p> Beachten Sie, dass die Verschlüsselung noch viel mehr umfasst. </p> <p> Es kann ratsam sein, die zu lesen <a href=\"https://www.openssl.org/docs/\" target=\"_blank\" rel=\"nofollow noopener\"> OpenSSL-Dokumentation </a> bevor Sie dieser Methode Ihre Daten anvertrauen. Wenn Sie jedoch nicht versuchen, der NSA oder dem russischen Militär zu entkommen, sollte diese Methode perfekt funktionieren, um Ihre Dateien und Verzeichnisse sicher und für andere unzugänglich zu halten. </p> <p> </p> <h2 id=\"install-openssl\"> OpenSSL installieren </h2> <p> Sie müssen das beliebte OpenSSL-Paket installiert haben, also überprüfen Sie zuerst, ob es bereits mit dem installiert ist <a href=\"https://www.makeuseof.com/basic-commands-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Linux-Befehl </a> : </p> <pre><code class=\"hljs\">openssl version</code></pre> <p> Wenn die aktuelle Versionsnummer gedruckt wird, sind Sie bereit für den nächsten Abschnitt. Andernfalls können Sie OpenSSL einfach über apt-get installieren, wenn Sie die Fehlermeldung &quot;Befehl nicht gefunden&quot; erhalten: </p> <pre><code class=\"hljs perl\">sudo apt-get -y install openssl</code></pre> <p> </p> <h2 id=\"encrypt-and-decrypt-files\"> Dateien verschlüsseln und entschlüsseln </h2> <p> Wenn Sie beispielsweise eine Datei namens data.tar.gz verschlüsseln möchten, führen Sie den folgenden Befehl aus: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -a -salt -iter 5 -in data.tar.gz -out data.enc</code></pre> <p> Sie werden zweimal aufgefordert, ein Verschlüsselungskennwort einzugeben, das beliebig sein kann. Dieser Befehl führt zu einer neuen data.enc-Datei als neu verschlüsselte Datei. Bitte beachten Sie, dass die ursprüngliche Datei data.tar.gz an ihrer Stelle verbleibt. Bitte stellen Sie daher sicher, dass Sie sie bei Bedarf löschen. </p> <p> Bei Bedarf können Sie die Datei data.enc mit dem Befehl entschlüsseln: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in data.enc -out data_decrypted.tar.gz</code></pre> <p> Der obige Befehl fordert Sie zur Eingabe des Verschlüsselungskennworts auf und führt dann zu einer Datei data_decrypted.tar.gz, die die entschlüsselte Version Ihrer Datei enthält. </p> <p> </p> <h2 id=\"encrypt-and-decrypt-directories\"> Verzeichnisse verschlüsseln und entschlüsseln </h2> <p> Die Befehle im obigen Abschnitt funktionieren hervorragend für einzelne Dateien, aber was passiert, wenn Sie ein ganzes Verzeichnis verschlüsseln möchten? Dafür gibt es in OpenSSL keine eingebaute Unterstützung, aber dank der Magie von Linux ist dies kein Problem. Wenn Sie beispielsweise ein Verzeichnis namens &quot;Dokumente&quot; verschlüsseln möchten, können Sie den Befehl verwenden: </p> <pre><code class=\"hljs\">tar -cf tmpdata.tar documents && gzip tmpdata.tar && openssl aes-256-cbc -a -salt -iter 5 -in tmpdata.tar.gz -out documents.enc && rm -f tmpdata.tar.gz</code></pre> <p> Ein bisschen umständlich, aber die einzigen zwei Stellen im obigen Befehl, die Sie ändern müssen, sind &quot;documents&quot; im ersten Segment, das das zu verschlüsselnde Verzeichnis ist, und &quot;documents.enc&quot; im dritten Segment, das die resultierende verschlüsselte Datei ist. Dieser Befehl archiviert das Verzeichnis, verschlüsselt es und löscht dann das erstellte temporäre Archiv, wobei eine einzelne verschlüsselte Datei files.enc an seiner Stelle verbleibt. </p> <p> Das Entschlüsseln der neu erstellten Datei files.enc ist genauso einfach mit dem Befehl: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in documents.enc -out tmpdata.tar.gz && tar -xzf tmpdata.tar.gz && rm -f tmpdata.tar.gz</code></pre> <p> Der einzige Teil des obigen Befehls, den Sie ändern müssen, ist &quot;documents.enc&quot; im ersten Segment, das der Name der verschlüsselten Datei ist. Dieser Befehl fordert Sie zur Eingabe des Verschlüsselungskennworts auf, fährt mit dem Entschlüsseln und Entpacken des Archivs fort und löscht dann das temporäre Archiv, wobei das entschlüsselte Verzeichnis als Ergebnis verbleibt. </p> <p> </p> <h2 id=\"protect-your-data\"> Schützen Sie Ihre Daten </h2> <p> Jetzt wissen Sie, wie einfach es ist, Ihre Daten schnell zu ver- und zu entschlüsseln, nutzen Sie Ihr Wissen und schützen Sie Ihre privaten Daten und vermeiden Sie sie <a href=\"https://www.makeuseof.com/worst-data-breaches/\" target=\"_blank\" rel=\"nofollow noopener\"> Datenschutzverletzungen </a> . Um es noch einmal zu wiederholen, Verschlüsselung hat viel mehr zu bieten, als hier dargestellt wird, und das oben Genannte soll nicht Strafverfolgungsbehörden oder hochqualifizierten und entschlossenen Hackern entgehen. </p> <p> Wenn Sie Ihre Daten jedoch einfach vor neugierigen Blicken wie dem Ihres Schwagers oder des Computerreparaturtechnikers schützen möchten, sollten die oben genannten Methoden den Zweck erfüllen. </p>"}