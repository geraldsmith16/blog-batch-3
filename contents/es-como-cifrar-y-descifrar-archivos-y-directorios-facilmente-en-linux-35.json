{"title":"Cómo cifrar y descifrar archivos y directorios fácilmente en Linux","content":"<p> ¿Alguna vez ha querido cifrar archivos en Linux de forma rápida y sencilla sin tener que instalar y aprender nuevos paquetes de software? Esta es una manera excelente y fácil de cifrar fácilmente archivos o directorios a través de AES256 protegidos con una contraseña, lo que ayuda a mantener sus archivos lejos de miradas indiscretas. </p> <h2 id=\"the-basics-of-encryption-with-openssl\"> Los conceptos básicos del cifrado con OpenSSL </h2> <p> Es importante tener en cuenta que hay mucho más en el cifrado que esto. </p> <p> Puede ser prudente de su parte leer el <a href=\"https://www.openssl.org/docs/\" target=\"_blank\" rel=\"nofollow noopener\"> Documentación de OpenSSL </a> antes de confiar en este método con sus datos. No obstante, suponiendo que no esté tratando de evadir la NSA o el ejército ruso, este método debería funcionar perfectamente para mantener sus archivos y directorios seguros e inaccesibles para otros. </p> <p> </p> <h2 id=\"install-openssl\"> Instalar OpenSSL </h2> <p> Necesita tener instalado el popular paquete OpenSSL, así que primero verifique si ya está instalado con el <a href=\"https://www.makeuseof.com/basic-commands-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Comando de Linux </a> : </p> <pre><code class=\"hljs\">openssl version</code></pre> <p> Si imprime el número de versión actual, está listo para la siguiente sección. De lo contrario, si recibe un error de &quot;comando no encontrado&quot;, puede instalar fácilmente OpenSSL a través de apt-get: </p> <pre><code class=\"hljs perl\">sudo apt-get -y install openssl</code></pre> <p> </p> <h2 id=\"encrypt-and-decrypt-files\"> Cifrar y descifrar archivos </h2> <p> Por ejemplo, si quisiera encriptar un archivo llamado data.tar.gz, ejecutaría el comando: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -a -salt -iter 5 -in data.tar.gz -out data.enc</code></pre> <p> Se le pedirá que ingrese una contraseña de cifrado dos veces, que puede ser la que desee. Este comando dará como resultado un nuevo archivo data.enc como el archivo recién cifrado. Tenga en cuenta que esto dejará el archivo data.tar.gz original en su lugar, así que asegúrese de eliminarlo si es necesario. </p> <p> Cuando lo desee, puede descifrar el archivo data.enc con el comando: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in data.enc -out data_decrypted.tar.gz</code></pre> <p> El comando anterior le pedirá la contraseña de cifrado, luego dará como resultado un archivo data_decrypted.tar.gz que contiene la versión descifrada de su archivo. </p> <p> </p> <h2 id=\"encrypt-and-decrypt-directories\"> Cifrar y descifrar directorios </h2> <p> Los comandos de la sección anterior funcionan muy bien para archivos individuales, pero ¿qué sucede si desea cifrar un directorio completo? No hay soporte integrado en OpenSSL para esto, pero gracias a la magia de Linux, esto no es un problema. Por ejemplo, si desea cifrar un directorio llamado &quot;documentos&quot;, puede usar el comando: </p> <pre><code class=\"hljs\">tar -cf tmpdata.tar documents && gzip tmpdata.tar && openssl aes-256-cbc -a -salt -iter 5 -in tmpdata.tar.gz -out documents.enc && rm -f tmpdata.tar.gz</code></pre> <p> Es un poco complicado, pero los únicos dos lugares en el comando anterior que necesita modificar son &quot;documentos&quot; en el primer segmento que es el directorio a cifrar, y &quot;documentos.enc&quot; en el tercer segmento que es el archivo cifrado resultante. Este comando archivará el directorio, lo cifrará y luego eliminará el archivo temporal creado dejando un único archivo documents.enc cifrado en su lugar. </p> <p> Descifrar el archivo documents.enc recién creado es igual de fácil con el comando: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in documents.enc -out tmpdata.tar.gz && tar -xzf tmpdata.tar.gz && rm -f tmpdata.tar.gz</code></pre> <p> La única parte del comando anterior que necesita modificar es &quot;documentos.enc&quot; en el primer segmento, que es el nombre del archivo cifrado. Este comando le pedirá la contraseña de cifrado, procederá a descifrar y descomprimir el archivo, luego eliminará el archivo temporal dejando el directorio descifrado como resultado. </p> <p> </p> <h2 id=\"protect-your-data\"> Proteja sus datos </h2> <p> Ahora que sabe lo fácil que es cifrar y descifrar rápidamente sus datos, ponga en práctica sus conocimientos y mantenga sus datos privados seguros y evite <a href=\"https://www.makeuseof.com/worst-data-breaches/\" target=\"_blank\" rel=\"nofollow noopener\"> violaciones de datos </a> . Nuevamente, para reiterar, hay mucho más en el cifrado de lo que se presenta aquí y lo anterior no está destinado a evadir la aplicación de la ley o los piratas informáticos altamente capacitados y determinados. </p> <p> Sin embargo, si simplemente desea proteger sus datos contra miradas indiscretas, como la de su cuñado o el técnico de reparación de computadoras, entonces los métodos anteriores deberían funcionar perfectamente. </p>"}