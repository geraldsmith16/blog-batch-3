{"title":"Qu&#39;est-ce que l&#39;époque Unix et à quand remonte l&#39;époque Unix ?","content":"<p> Pourquoi Unix a-t-il sa propre conception du temps ? Quelle est l&#39;époque et quel est le problème Y2038 ? </p> <p> L&#39;heure Unix est un moyen de représenter une date et une heure spécifiques, utilisée par Linux, macOS et de nombreux autres systèmes interopérables. C&#39;est tellement répandu que vous l&#39;utilisez probablement sans vous en rendre compte. Une fois que vous aurez compris le temps Unix, vous le remarquerez dans de nombreux contextes. Plusieurs outils peuvent vous aider à travailler avec le temps Unix. </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> Quel est le but du temps Unix ? </h2> <p> Le temps Unix est un nombre total de secondes depuis une heure et une date fixes. C&#39;est un format date/heure (ou horodatage) qui est différent des dates et heures lisibles par l&#39;homme auxquelles nous sommes habitués. Ceci est purement pour des raisons d&#39;efficacité. Il faut beaucoup moins d&#39;espace pour stocker un seul nombre représentant les secondes que pour stocker des valeurs séparées pour l&#39;année, le mois, l&#39;heure, etc. </p> <p> Bien sûr, en termes modernes, la différence d&#39;espace n&#39;est pas si grande du tout. Mais considérez qu&#39;Unix est né à la fin des années 1960, lorsque le stockage disponible était beaucoup plus petit. Les horodatages sont également beaucoup utilisés, de sorte que leur stockage s&#39;additionne. Par exemple, chaque fichier est associé à trois horodatages. </p> <p> Le format est pratiquement impossible à traduire dans votre tête à moins que vous ne soyez un génie mathématique. Mais il présente encore certains avantages par rapport à des alternatives plus lisibles telles que <strong> Mercredi 21 octobre 2015 07:28:00 GMT </strong> . Vous pouvez commander deux horodatages Unix très facilement, en un coup d&#39;œil. Il est également généralement plus rapide de déterminer la différence entre deux horodatages. Cela est particulièrement vrai pour les dates rapprochées, comme les jours adjacents. </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> À propos de l&#39;époque </h3> <p> Ainsi, le temps Unix est un nombre total de secondes depuis un moment précis. Mais quel est ce moment-là ? Son <strong> 00:00:00 UTC </strong> au <strong> 1er janvier 1970 </strong> . C&#39;est ce qu&#39;on appelle souvent l&#39;époque Unix. Les programmeurs ont choisi cette date pour l&#39;époque par commodité car c&#39;était la date la plus proche lorsqu&#39;ils ont inventé l&#39;heure Unix. </p> <p> Vous avez peut-être vu cette date quand quelque chose ne va pas. C&#39;est clairement un bug, mais qui a l&#39;air très étrange quand il en résulte une date antérieure à la naissance de beaucoup d&#39;entre nous ! C&#39;est tout à fait compréhensible, cependant, quand on connaît l&#39;époque Unix. Si un système essaie d&#39;afficher un horodatage qui n&#39;a aucune valeur, il se traduira souvent par 0 et donnera la date exacte de l&#39;époque. </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> Le format de données de temps Unix </h2> <p> A proprement parler, il n&#39;y en a pas. Le type de données d&#39;origine était un entier de 32 bits, et cela reste souvent le cas, même dans des systèmes beaucoup plus puissants. </p> <p> Ce type de données permet à la valeur de stocker un total de 2^32 secondes, soit un peu plus de 136 ans. Cette valeur est généralement signée, ce qui signifie qu&#39;elle peut être négative ou positive. Ainsi, il représente généralement 68 ans de part et d&#39;autre de l&#39;époque, c&#39;est-à-dire 1902-2038. </p> <p> C&#39;est encore une période limitée, bien sûr. Mais l&#39;utilisation principale du format d&#39;horodatage était pour des concepts tels que la modification de fichier. Le besoin était vraiment de représenter le temps proche du présent, plutôt que l&#39;histoire ancienne ou loin dans le futur. Même pour des applications telles que les calendriers, il est rarement nécessaire de représenter des dates à plus de quelques décennies dans le futur. </p> <p> Mais cela ne veut pas dire que ce laps de temps limité est sans problème… </p> <h3 id=\"the-year-2038-problem\"> Le problème de l&#39;année 2038 </h3> <p> Le bogue de l&#39;an 2000 ( <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> l&#39;une des pires erreurs de programmation de l&#39;histoire </a> ) affectait les systèmes informatiques qui stockaient les années sous forme de valeurs à deux chiffres. Lorsque l&#39;an 2000 est arrivé, ces systèmes l&#39;ont traité comme s&#39;il s&#39;agissait de 1900. En fait, ce n&#39;était pas aussi catastrophique qu&#39;on le craignait, principalement parce que beaucoup de gens ont consacré beaucoup de temps et d&#39;efforts à l&#39;avance pour s&#39;y préparer. </p> <p> Si vous avez prêté attention à la section précédente, vous avez peut-être repéré un problème similaire qui pourrait affecter le temps Unix. Eh bien, le temps Unix a son propre problème de données : le problème Y2k38. (C&#39;est souvent appelé un problème, pas un bogue ; peut-être sommes-nous devenus plus optimistes depuis l&#39;an 2000 !) Lorsque le temps Unix s&#39;achèvera littéralement en 2038, les systèmes traiteront les nouvelles dates comme 1902 ou 1970. va juste échouer complètement. </p> <p> Au moins, ce problème ne nous frappera pas sur le coup de minuit le soir du Nouvel An. La dernière seconde du temps Unix 32 bits tombera le 19 mars. Dans l&#39;éventualité, nous mettrons probablement à niveau la plupart des systèmes d&#39;ici 2038 ou ils seront de toute façon obsolètes d&#39;ici là. </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> Quelques ressources utiles d&#39;horodatage </h2> <p> le <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> Convertisseur d&#39;époque </a> est probablement le convertisseur d&#39;horodatage le plus complet disponible. Il commence par afficher l&#39;heure Unix actuelle - en temps réel - et ajoute presque toutes les fonctionnalités imaginables en plus de cela. Son utilisation principale est la conversion entre les horodatages et les dates lisibles par l&#39;homme, dans les deux sens. </p> <p> Dan&#39;s Tools est une vaste collection d&#39;applications Web utiles, dont l&#39;une est un <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> convertisseur d&#39;horodatage </a> . C&#39;est plus basique, mais a une présentation très propre et est facile à utiliser. </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> Le temps est </a> présente un autre look encore plus minimaliste. Il affiche l&#39;heure dans un certain nombre de formats, y compris l&#39;heure Unix. Il inclut l&#39;heure actuelle dans le titre de sa page, ce qui est utile. </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> Utiliser Unix Time avec les outils de ligne de commande </h2> <p> Sous Linux et macOS, le <strong> Date </strong> est l&#39;utilitaire principal pour gérer la date/l&#39;heure, y compris les horodatages Unix. Appelé sans aucun argument, il renvoie la date/heure actuelle dans un format lisible par l&#39;homme : </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> Si vous avez besoin de la date/heure actuelle sous Unix, utilisez le <strong> +%s </strong> argument: </p> 16108052 <p> Vous pouvez convertir une date lisible par l&#39;homme en un horodatage en utilisant le <strong> -ré </strong> signaler si votre version de <strong> Date </strong> le supporte. La plupart des versions de Linux devraient, par défaut : </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> Sur macOS, <strong> Date </strong> est un programme différent, qui nécessite un ensemble d&#39;indicateurs différent : </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> Dans l&#39;autre sens, vous pouvez convertir à partir d&#39;un horodatage Unix en utilisant le <strong> -r </strong> drapeau: </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> Certains autres programmes utilisent le <strong> %s </strong> format pour gérer le temps Unix. Par exemple, si vous voulez afficher la date de modification d&#39;un fichier en temps Unix, avec le <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> version Linux de <strong> ls </strong></a> , vous pouvez utiliser les éléments suivants : </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> Comment utiliser le temps Unix dans les langages de programmation </h2> <p> PHP a le <strong> temps() </strong> fonction qui renvoie l&#39;horodatage Unix actuel. Son <strong> Date() </strong> La fonction prend un horodatage comme deuxième argument : </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript aborde les choses d&#39;une manière intéressante. Il a un <strong> Date.maintenant() </strong> méthode pour obtenir le nombre de millisecondes depuis l&#39;époque Unix. Bien sûr, vous pouvez diviser cela par 1 000 et arrondir le résultat pour donner le temps Unix équivalent en secondes : </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> Comprendre le temps Unix </h2> <p> Le temps Unix est un concept simple qui surgit dans de nombreux endroits. Une fois que vous l&#39;aurez compris, vous pourrez le trouver très utile, pour calculer les décalages horaires, par exemple. Vous pouvez également reconnaître quand cela peut être la cause de certains bugs. </p> <p> Des concepts tels que l&#39;époque et les horodatages sont une partie importante de la mise en route de Linux. Pour en savoir plus sur les incontournables comme <strong> ls </strong> , consultez notre guide des commandes Linux de base. </p>"}