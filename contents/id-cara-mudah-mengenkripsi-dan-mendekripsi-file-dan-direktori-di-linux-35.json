{"title":"Cara Mudah Mengenkripsi dan Mendekripsi File dan Direktori di Linux","content":"<p> Pernahkah Anda ingin mengenkripsi file dengan cepat dan mudah di Linux tanpa harus menginstal dan mempelajari paket perangkat lunak baru? Inilah cara yang sangat baik dan mudah untuk mengenkripsi file atau direktori dengan mudah melalui AES256 yang diamankan dengan kata sandi, membantu menjaga file Anda dari mata-mata. </p> <h2 id=\"the-basics-of-encryption-with-openssl\"> Dasar-dasar Enkripsi Dengan OpenSSL </h2> <p> Penting untuk diperhatikan bahwa ada lebih banyak lagi enkripsi selain ini. </p> <p> Mungkin bijaksana bagi Anda untuk membaca <a href=\"https://www.openssl.org/docs/\" target=\"_blank\" rel=\"nofollow noopener\"> Dokumentasi OpenSSL </a> sebelum mempercayai metode ini dengan data Anda. Meskipun demikian, dengan asumsi Anda tidak mencoba untuk menghindari NSA atau militer Rusia, metode ini akan bekerja dengan sempurna untuk menjaga file dan direktori Anda tetap aman dan tidak dapat diakses oleh orang lain. </p> <p> </p> <h2 id=\"install-openssl\"> Instal OpenSSL </h2> <p> Anda perlu menginstal paket OpenSSL yang populer, jadi periksa terlebih dahulu untuk melihat apakah paket tersebut sudah diinstal dengan <a href=\"https://www.makeuseof.com/basic-commands-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> perintah Linux </a> : </p> <pre><code class=\"hljs\">openssl version</code></pre> <p> Jika itu mencetak nomor versi saat ini, Anda siap untuk bagian berikutnya. Jika tidak, jika Anda menerima kesalahan &quot;perintah tidak ditemukan&quot;, Anda dapat dengan mudah menginstal OpenSSL melalui apt-get: </p> <pre><code class=\"hljs perl\">sudo apt-get -y install openssl</code></pre> <p> </p> <h2 id=\"encrypt-and-decrypt-files\"> Enkripsi dan Dekripsi File </h2> <p> Misalnya, jika Anda ingin mengenkripsi file bernama data.tar.gz, Anda akan menjalankan perintah: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -a -salt -iter 5 -in data.tar.gz -out data.enc</code></pre> <p> Anda akan diminta untuk memasukkan kata sandi enkripsi dua kali, yang dapat berupa apa pun yang Anda inginkan. Perintah ini akan menghasilkan file data.enc baru sebagai file yang baru dienkripsi. Harap dicatat, ini akan meninggalkan file data.tar.gz asli di tempatnya, jadi pastikan untuk menghapusnya jika perlu. </p> <p> Bila diinginkan, Anda dapat mendekripsi file data.enc dengan perintah: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in data.enc -out data_decrypted.tar.gz</code></pre> <p> Perintah di atas akan meminta Anda untuk memasukkan kata sandi enkripsi, lalu menghasilkan file data_decrypted.tar.gz yang berisi versi file yang didekripsi. </p> <p> </p> <h2 id=\"encrypt-and-decrypt-directories\"> Enkripsi dan Dekripsi Direktori </h2> <p> Perintah di bagian di atas berfungsi dengan baik untuk file individual, tetapi apa yang terjadi jika Anda ingin mengenkripsi seluruh direktori? Tidak ada dukungan bawaan di OpenSSL untuk ini, tetapi berkat keajaiban Linux, ini tidak menjadi masalah. Misalnya, jika Anda ingin mengenkripsi direktori bernama &quot;dokumen&quot;, Anda dapat menggunakan perintah: </p> <pre><code class=\"hljs\">tar -cf tmpdata.tar documents && gzip tmpdata.tar && openssl aes-256-cbc -a -salt -iter 5 -in tmpdata.tar.gz -out documents.enc && rm -f tmpdata.tar.gz</code></pre> <p> Sedikit suap, tetapi hanya dua tempat dalam perintah di atas yang perlu Anda ubah adalah &quot;dokumen&quot; di segmen pertama yang merupakan direktori yang akan dienkripsi, dan &quot;documents.enc&quot; di segmen ketiga yang merupakan file terenkripsi yang dihasilkan. Perintah ini akan mengarsipkan direktori, mengenkripsinya, lalu menghapus arsip sementara yang dibuat dengan meninggalkan satu file document.enc terenkripsi sebagai gantinya. </p> <p> Mendekripsi file document.enc yang baru dibuat sama mudahnya dengan perintah: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in documents.enc -out tmpdata.tar.gz && tar -xzf tmpdata.tar.gz && rm -f tmpdata.tar.gz</code></pre> <p> Satu-satunya bagian dari perintah di atas yang perlu Anda ubah adalah &quot;documents.enc&quot; di segmen pertama yang merupakan nama file terenkripsi. Perintah ini akan meminta Anda untuk memasukkan kata sandi enkripsi, melanjutkan untuk mendekripsi dan membongkar arsip, kemudian menghapus arsip sementara meninggalkan direktori yang didekripsi sebagai hasilnya. </p> <p> </p> <h2 id=\"protect-your-data\"> Lindungi Data Anda </h2> <p> Sekarang setelah Anda mengetahui betapa mudahnya mengenkripsi dan mendekripsi data Anda dengan cepat, manfaatkan pengetahuan Anda dan simpan data pribadi Anda dengan aman dan hindari <a href=\"https://www.makeuseof.com/worst-data-breaches/\" target=\"_blank\" rel=\"nofollow noopener\"> pelanggaran data </a> . Sekali lagi untuk mengulangi, ada lebih banyak enkripsi daripada yang disajikan di sini dan di atas tidak dimaksudkan untuk menghindari penegakan hukum atau peretas yang sangat terampil dan ditentukan. </p> <p> Namun, jika Anda hanya ingin melindungi data Anda dari mata-mata seperti saudara ipar Anda atau teknisi perbaikan komputer, maka metode di atas akan berhasil dengan baik. </p>"}