{"title":"Come crittografare e decrittografare facilmente file e directory in Linux","content":"<p> Hai mai desiderato crittografare rapidamente e facilmente i file in Linux senza dover installare e apprendere nuovi pacchetti software? Ecco un modo eccellente e semplice per crittografare facilmente file o directory tramite AES256 protetto con una password, aiutando a tenere i file lontani da occhi indiscreti. </p> <h2 id=\"the-basics-of-encryption-with-openssl\"> Le basi della crittografia con OpenSSL </h2> <p> È importante notare che la crittografia offre molto di più di questo. </p> <p> Potrebbe essere prudente da parte tua leggere il <a href=\"https://www.openssl.org/docs/\" target=\"_blank\" rel=\"nofollow noopener\"> Documentazione OpenSSL </a> prima di affidare questo metodo ai tuoi dati. Tuttavia, supponendo che tu non stia cercando di eludere l&#39;NSA o l&#39;esercito russo, questo metodo dovrebbe funzionare perfettamente per mantenere i tuoi file e directory al sicuro e inaccessibili agli altri. </p> <p> </p> <h2 id=\"install-openssl\"> Installa OpenSSL </h2> <p> Hai bisogno del popolare pacchetto OpenSSL installato, quindi prima controlla se è già installato con il <a href=\"https://www.makeuseof.com/basic-commands-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Comando Linux </a> : </p> <pre><code class=\"hljs\">openssl version</code></pre> <p> Se stampa il numero della versione corrente, sei pronto per la sezione successiva. Altrimenti, se ricevi un errore &quot;comando non trovato&quot;, puoi facilmente installare OpenSSL tramite apt-get: </p> <pre><code class=\"hljs perl\">sudo apt-get -y install openssl</code></pre> <p> </p> <h2 id=\"encrypt-and-decrypt-files\"> Cripta e decrittografa i file </h2> <p> Ad esempio, se si desidera crittografare un file denominato data.tar.gz, eseguire il comando: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -a -salt -iter 5 -in data.tar.gz -out data.enc</code></pre> <p> Ti verrà chiesto di inserire due volte una password di crittografia, che può essere qualsiasi cosa desideri. Questo comando risulterà in un nuovo file data.enc come nuovo file crittografato. Tieni presente che questo lascerà il file data.tar.gz originale al suo posto, quindi assicurati di eliminarlo se necessario. </p> <p> Se lo desideri, puoi decrittografare il file data.enc con il comando: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in data.enc -out data_decrypted.tar.gz</code></pre> <p> Il comando sopra ti chiederà la password di crittografia, quindi risulterà in un file data_decrypted.tar.gz contenente la versione decrittografata del tuo file. </p> <p> </p> <h2 id=\"encrypt-and-decrypt-directories\"> Cripta e decrittografa le directory </h2> <p> I comandi nella sezione precedente funzionano benissimo per i singoli file, ma cosa succede se desideri crittografare un&#39;intera directory? Non esiste un supporto integrato in OpenSSL per questo, ma grazie alla magia di Linux, questo non è un problema. Ad esempio, se si desidera crittografare una directory denominata &quot;documenti&quot;, è possibile utilizzare il comando: </p> <pre><code class=\"hljs\">tar -cf tmpdata.tar documents && gzip tmpdata.tar && openssl aes-256-cbc -a -salt -iter 5 -in tmpdata.tar.gz -out documents.enc && rm -f tmpdata.tar.gz</code></pre> <p> Un po&#39; un boccone, ma gli unici due posti nel comando sopra che devi modificare sono &quot;documents&quot; nel primo segmento che è la directory da crittografare e &quot;documents.enc&quot; nel terzo segmento che è il file crittografato risultante. Questo comando archivierà la directory, la crittograferà, quindi eliminerà l&#39;archivio temporaneo creato lasciando al suo posto un singolo file document. </p> <p> Decifrare il file files.enc appena creato è altrettanto facile con il comando: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in documents.enc -out tmpdata.tar.gz && tar -xzf tmpdata.tar.gz && rm -f tmpdata.tar.gz</code></pre> <p> L&#39;unica parte del comando precedente che devi modificare è &quot;documents.enc&quot; nel primo segmento che è il nome del file crittografato. Questo comando ti chiederà la password di crittografia, procederà a decrittografare e decomprimere l&#39;archivio, quindi eliminare l&#39;archivio temporaneo lasciando come risultato la directory decrittografata. </p> <p> </p> <h2 id=\"protect-your-data\"> Proteggi i tuoi dati </h2> <p> Ora che sai quanto è facile crittografare e decrittografare rapidamente i tuoi dati, utilizza le tue conoscenze e mantieni i tuoi dati privati ​​al sicuro ed evita <a href=\"https://www.makeuseof.com/worst-data-breaches/\" target=\"_blank\" rel=\"nofollow noopener\"> violazioni dei dati </a> . Ancora una volta, per ribadire, c&#39;è molto di più nella crittografia di quanto presentato qui e quanto sopra non intende eludere le forze dell&#39;ordine o hacker altamente qualificati e determinati. </p> <p> Tuttavia, se vuoi semplicemente proteggere i tuoi dati da occhi indiscreti come quello di tuo cognato o del tecnico di riparazione del computer, i metodi di cui sopra dovrebbero fare il trucco magnificamente. </p>"}