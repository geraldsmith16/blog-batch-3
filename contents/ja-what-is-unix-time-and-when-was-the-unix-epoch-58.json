{"title":"Unix時間とは何ですか？Unixエポックはいつでしたか？","content":"<p> Unixに独自の時間の概念があるのはなぜですか？エポックとは何ですか？Y2038問題は何ですか？ </p> <p> Unix時間は、Linux、macOS、および他の多くの相互運用可能なシステムで使用される特定の日付と時刻を表す手段です。非常に普及しているため、おそらく気付かないうちに使用しているでしょう。ただし、Unix時間を理解すると、さまざまな状況でそれを見つけることができます。いくつかのツールは、Unix時間での作業に役立ちます。 </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> Unix時間の目的は何ですか？ </h2> <p> Unix時間は、固定された日時からの合計秒数です。これは、人間が読み取れる日付と時刻とは異なって見える日付/時刻（またはタイムスタンプ）形式です。これは純粋に効率上の理由によるものです。年、月、時間などの個別の値を格納するよりも、秒を表す単一の数値を格納する方がはるかに少ないスペースで済みます。 </p> <p> もちろん、現代的には、スペースの違いはそれほど大きくありません。しかし、Unixは、利用可能なストレージがはるかに小さかった1960年代後半に始まったと考えてください。タイムスタンプも頻繁に使用されるため、それらのストレージは合計されます。たとえば、すべてのファイルには3つのタイムスタンプが関連付けられています。 </p> <p> あなたが数学の天才でない限り、このフォーマットを頭の中で翻訳することはほとんど不可能です。しかし、それでも、次のようなより読みやすい代替手段に比べていくつかの利点があります。 <strong> 2015年10月21日水曜日07：28：00GMT </strong> 。一目で、2つのUnixタイムスタンプを非常に簡単に注文できます。また、通常、2つのタイムスタンプの違いを理解する方が簡単です。これは、隣接する日など、互いに近い日付に特に当てはまります。 </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> エポックについて </h3> <p> したがって、Unix時間は、特定の時点からの合計秒数です。しかし、その時点は何ですか？それは <strong> 00:00:00 UTC </strong> オン <strong> 1970年1月1日 </strong> 。これは、Unixエポックと呼ばれることがよくあります。プログラマーは、Unix時間を発明したときに最も近いラウンド日付であったため、便宜上この日付を選択しました。 </p> <p> 何かがうまくいかなかったときに、この日付を見たことがあるかもしれません。明らかにバグですが、多くの人が生まれる前の日付になると非常に奇妙に見えます。ただし、Unix時間について知っていれば、それは完全に理解できます。システムが値のないタイムスタンプを表示しようとすると、多くの場合0に変換され、正確なエポック日付になります。 </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> Unix時間データ形式 </h2> <p> 厳密に言えば、1つはありません。元のデータ型は32ビット整数でしたが、はるかに強力なシステムでも、これが当てはまることがよくあります。 </p> <p> このデータ型を使用すると、値に合計2 ^ 32秒を格納できます。これは、136年強です。この値は通常、符号付きです。つまり、負または正の値になります。したがって、それは通常、エポックの両側、つまり1902-2038で68年を表します。 </p> <p> もちろん、これはまだ限られた期間です。ただし、タイムスタンプ形式の主な用途は、ファイルの変更などの概念でした。古代の歴史や遠い未来ではなく、現在に近い時間を表す必要がありました。カレンダーなどのアプリケーションの場合でも、数十年以上先の日付を表す必要はめったにありません。 </p> <p> しかし、それはこの限られた期間に問題がないという意味ではありません… </p> <h3 id=\"the-year-2038-problem\"> 2038年問題 </h3> <p> Y2Kバグ（ <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> 歴史上最悪のプログラミングミスの1つ </a> ）年を2桁の値として保存する影響を受けたコンピュータシステム。 2000年になると、そのようなシステムは1900年のように扱いました。この場合、多くの人が事前に準備に多くの時間と労力を費やしたことが主な理由で、これは恐れられるほど壊滅的なものではありませんでした。 </p> <p> 前のセクションで注意を払っていた場合は、Unix時間に影響を与える可能性のある同様の問題を発見した可能性があります。ええと、Unix時間にはそれ自身のデータ問題があります：Y2k38問題。 （バグではなく問題と呼ばれることがよくあります。2000年以降、楽観的になっているかもしれません！）2038年にUnix時間が文字通りなくなると、システムは新しい日付を1902または1970として扱います。完全に失敗するだけです。 </p> <p> 少なくとも、この問題は大晦日の真夜中のストロークでは発生しません。 32ビットUnix時間の最後の秒は、3月19日になります。最終的には、2038年までにほとんどのシステムをアップグレードするか、いずれにせよそれまでに廃止される可能性があります。 </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> いくつかの便利なタイムスタンプリソース </h2> <p> ザ・ <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> エポックコンバーター </a> サイトはおそらく利用可能な最も包括的なタイムスタンプコンバータです。まず、現在のUnix時間をリアルタイムで表示し、その上に考えられるほぼすべての機能を追加します。その主な用途は、タイムスタンプと人間が読める形式の日付を双方向で変換することです。 </p> <p> Dan’s Toolsは、便利なWebアプリの膨大なコレクションであり、そのうちの1つは <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> タイムスタンプコンバータ </a> 。より基本的ですが、非常にすっきりとしたプレゼンテーションで使いやすいです。 </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> Time.is </a> 別の、さらにミニマルな外観を提示します。 Unix時間を含む、さまざまな形式で時間を表示します。ページタイトルに現在の時刻が含まれているので便利です。 </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> コマンドラインツールでのUnixTimeの使用 </h2> <p> LinuxとmacOSでは、 <strong> 日付 </strong> プログラムは、Unixタイムスタンプを含む日付/時刻を処理するためのコアユーティリティです。引数なしで呼び出されると、現在の日付/時刻が人間が読める形式で返されます。 </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> Unix時間の現在の日付/時刻が必要な場合は、 <strong> +％s </strong> 引数： </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> 人間が読める日付からタイムスタンプに変換するには、 <strong> -d </strong> お使いのバージョンの場合はフラグを立てます <strong> 日付 </strong> それをサポートします。ほとんどのLinuxバージョンは、デフォルトで次のようになっているはずです。 </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> macOSでは、 <strong> 日付 </strong> は別のプログラムであり、別のフラグのセットが必要です。 </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> 反対方向に進むと、Unixタイムスタンプから変換できます。 <strong> -r </strong> 国旗： </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> 他のいくつかのプログラムは <strong> ％s </strong> Unix時間を処理するためのフォーマット。たとえば、ファイルの変更日をUnix時間で表示する場合は、 <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Linuxバージョンの <strong> ls </strong></a> 、次を使用できます。 </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> プログラミング言語でUnix時間を使用する方法 </h2> <p> PHPには <strong> 時間（） </strong> 現在のUnixタイムスタンプを返す関数。その <strong> 日付（） </strong> 関数は、2番目の引数としてタイムスタンプを取ります。 </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScriptは興味深い方法で物事にアプローチします。それは持っています <strong> Date.now（） </strong> Unixエポックからのミリ秒数を取得するメソッド。もちろん、これを1,000で割り、結果を丸めて、同等のUnix時間を秒単位で求めることができます。 </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> Unix時間を理解する </h2> <p> Unix時間は、多くの場所で発生する単純な概念です。一度理解すると、たとえば時差を計算するときに非常に役立つことがあります。また、それが特定のバグの原因である可能性がある場合も認識できます。 </p> <p> エポックやタイムスタンプなどの概念は、Linuxを使い始める上で重要な部分です。次のような必需品についてもっと知るために <strong> ls </strong> 、基本的なLinuxコマンドのガイドをご覧ください。 </p>"}