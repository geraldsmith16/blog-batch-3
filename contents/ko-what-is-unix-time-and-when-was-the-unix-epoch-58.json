{"title":"유닉스 시대는 무엇이며 유닉스 시대는 언제였습니까?","content":"<p> 유닉스에는 왜 고유 한 시간 개념이 있습니까? 시대는 무엇이며 Y2038 문제는 무엇입니까? </p> <p> Unix 시간은 Linux, macOS 및 기타 여러 상호 운용 가능한 시스템에서 사용되는 특정 날짜 및 시간을 나타내는 수단입니다. 너무 널리 퍼져있어서 아마 자신도 모르게 사용하고있을 것입니다. 하지만 유닉스 시간을 이해하면 여러 상황에서이를 발견하게 될 것입니다. 여러 도구가 Unix 시간 작업에 도움이 될 수 있습니다. </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> 유닉스 타임의 목적은 무엇입니까? </h2> <p> Unix 시간은 고정 된 시간과 날짜 이후의 총 초 수입니다. 사람이 읽을 수있는 날짜 및 시간과는 다르게 보이는 날짜 / 시간 (또는 타임 스탬프) 형식입니다. 이것은 순전히 효율성을위한 것입니다. 연도, 월, 시간 등에 대해 별도의 값을 저장하는 것보다 초를 나타내는 단일 숫자를 저장하는 데 훨씬 적은 공간이 필요합니다. </p> <p> 물론 현대적인 측면에서 공간 차이는 그다지 크지 않습니다. 그러나 Unix는 사용 가능한 스토리지가 훨씬 더 작은 1960 년대 후반에 시작되었다고 생각해보십시오. 타임 스탬프도 많이 사용되므로 스토리지가 추가됩니다. 예를 들어 모든 파일에는 세 개의 타임 스탬프가 연결되어 있습니다. </p> <p> 당신이 수학적 천재가 아니라면 형식은 당신의 머릿속으로 번역하기가 거의 불가능합니다. 그러나 다음과 같은 더 읽기 쉬운 대안에 비해 여전히 몇 가지 장점이 있습니다. <strong> 2015 년 10 월 21 일 수요일 07:28:00 GMT </strong> . 한 눈에 두 개의 Unix 타임 스탬프를 매우 쉽게 주문할 수 있습니다. 일반적으로 두 타임 스탬프의 차이를 알아내는 것이 더 빠릅니다. 이것은 인접한 날과 같이 서로 가까운 날짜의 경우 특히 그렇습니다. </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> Epoch 정보 </h3> <p> 따라서 Unix 시간은 특정 시점 이후의 총 초 수입니다. 그러나 그 시점은 무엇입니까? 이것의 <strong> 00:00:00 UTC </strong> 의 위에 <strong> 1970 년 1 월 1 일 </strong> . 이를 Unix Epoch라고도합니다. 프로그래머는이 날짜를 유닉스 시간을 발명했을 때 가장 가까운 라운드 날짜 였기 때문에 편의상이 날짜를 선택했습니다. </p> <p> 뭔가 잘못되었을 때이 날짜를 보셨을 것입니다. 분명히 버그이지만, 우리 중 많은 사람들이 태어나 기 전의 데이트가 생기면 매우 이상하게 보입니다! 하지만 유닉스 시간에 대해 알면 완전히 이해할 수 있습니다. 시스템에서 값이없는 타임 스탬프를 표시하려고하면 종종 0으로 변환되어 정확한 epoch 날짜가됩니다. </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> 유닉스 시간 데이터 형식 </h2> <p> 엄밀히 말하면 하나도 없습니다. 원래 데이터 유형은 32 비트 정수였으며 이는 훨씬 더 강력한 시스템에서도 종종 그대로 유지됩니다. </p> <p> 이 데이터 유형을 사용하면 값이 총 2 ^ 32 초를 저장할 수 있습니다. 이는 136 년이 조금 넘습니다. 이 값은 일반적으로 부호가 있으며 음수 또는 양수일 수 있습니다. 따라서 일반적으로 1902-2038 년과 같이 시대의 양쪽에서 68 년을 나타냅니다. </p> <p> 물론 이것은 여전히 ​​제한된 기간입니다. 그러나 타임 스탬프 형식의 주요 용도는 파일 수정과 같은 개념이었습니다. 고대사 나 먼 미래보다는 현재에 가까운 시간을 표현하는 것이 필요했습니다. 달력과 같은 응용 프로그램의 경우에도 수십 년 이후의 날짜를 나타낼 필요가 거의 없습니다. </p> <p> 하지만 그렇다고이 제한된 시간이 문제가 없다는 의미는 아닙니다. </p> <h3 id=\"the-year-2038-problem\"> 2038 년 문제 </h3> <p> Y2K 버그 ( <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> 역사상 최악의 프로그래밍 실수 중 하나 </a> ) 연도를 두 자리 값으로 저장 한 컴퓨터 시스템에 영향을 미쳤습니다. 2000 년이되었을 때 그러한 시스템은 그것을 1900 년처럼 취급했습니다.이 사건에서 이것은 많은 사람들이 사전에 많은 시간과 노력을 기울이고 준비를했기 때문에 두려움만큼 치명적이지 않았습니다. </p> <p> 이전 섹션에서주의를 기울 였다면 Unix 시간에 영향을 미칠 수있는 유사한 문제를 발견했을 수 있습니다. 글쎄요, 유닉스 시간에는 그 자체로 데이터 문제인 Y2k38 문제가 있습니다. (이는 버그가 아니라 문제라고도합니다. 아마도 2000 년 이후로 더 낙관적이되었습니다!) Unix 시간이 문자 그대로 2038 년에 다 떨어지면 시스템은 새로운 날짜를 1902 또는 1970으로 취급합니다. 완전히 실패 할 것입니다. </p> <p> 적어도이 문제는 섣달 그믐 날 자정에 우리에게 영향을 미치지 않을 것입니다. 32 비트 Unix 시간의 마지막 두 번째 시간은 3 월 19 일입니다. 언젠가는 2038 년까지 대부분의 시스템을 업그레이드하거나 그 때까지 폐기 될 것입니다. </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> 유용한 타임 스탬프 리소스 </h2> <p> 그만큼 <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> Epoch 변환기 </a> site는 아마도 가장 포괄적 인 타임 스탬프 변환기 일 것입니다. 현재 Unix 시간을 실시간으로 표시하는 것으로 시작하고 그 위에 상상할 수있는 거의 모든 기능을 추가합니다. 주요 용도는 타임 스탬프와 사람이 읽을 수있는 날짜를 양방향으로 변환하는 것입니다. </p> <p> Dan ’s Tools는 유용한 웹 앱의 방대한 모음이며, 그중 하나는 <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> 타임 스탬프 변환기 </a> . 더 기본적이지만 프리젠 테이션이 매우 깔끔하고 사용하기 쉽습니다. </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> 시간은 </a> 더욱 미니멀 한 또 다른 모습을 보여줍니다. Unix 시간을 포함하여 여러 형식으로 시간을 표시합니다. 유용한 페이지 제목에 현재 시간이 포함되어 있습니다. </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> 명령 줄 도구와 함께 Unix 시간 사용 </h2> <p> Linux 및 macOS에서 <strong> 데이트 </strong> program은 Unix 타임 스탬프를 포함하여 날짜 / 시간을 처리하는 핵심 유틸리티입니다. 인수없이 호출하면 현재 날짜 / 시간을 사람이 읽을 수있는 형식으로 반환합니다. </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> 현재 날짜 / 시간이 Unix 시간으로 필요하면 <strong> + % s </strong> 논의: </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> 다음을 사용하여 사람이 읽을 수있는 날짜를 타임 스탬프로 변환 할 수 있습니다. <strong> -디 </strong> 귀하의 버전이 <strong> 데이트 </strong> 그것을 지원합니다. 대부분의 Linux 버전은 기본적으로 다음을 수행해야합니다. </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> macOS에서는 <strong> 데이트 </strong> 다른 플래그 세트가 필요한 다른 프로그램입니다. </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> 다른 방향으로 가면 다음을 사용하여 Unix 타임 스탬프에서 변환 할 수 있습니다. <strong> -아르 자형 </strong> 깃발: </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> 일부 다른 프로그램은 <strong> %에스 </strong> 유닉스 시간을 다루는 형식. 예를 들어, 파일의 수정 날짜를 Unix 시간으로 표시하려면 <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Linux 버전 <strong> ls </strong></a> , 다음을 사용할 수 있습니다. </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> 프로그래밍 언어에서 Unix 시간을 사용하는 방법 </h2> <p> PHP는 <strong> 시각() </strong> 현재 Unix 타임 스탬프를 반환하는 함수입니다. 이것의 <strong> 데이트() </strong> 함수는 두 번째 인수로 타임 스탬프를 사용합니다. </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript는 흥미로운 방식으로 사물에 접근합니다. 그것은 <strong> Date.now () </strong> Unix 시대 이후의 밀리 초 수를 가져 오는 메소드입니다. 물론이를 1,000으로 나누고 결과를 반올림하여 동일한 Unix 시간을 초 단위로 제공 할 수 있습니다. </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> 유닉스 시간 이해 </h2> <p> 유닉스 시간은 여러 곳에서 나타나는 단순한 개념입니다. 예를 들어 시간 차이를 계산할 때 이해하면 매우 유용 할 수 있습니다. 또한 특정 버그의 원인 일 수있는시기를 알 수 있습니다. </p> <p> 시대 및 타임 스탬프와 같은 개념은 Linux를 시작하는 데 중요한 부분입니다. 다음과 같은 필수 사항에 대해 자세히 알아 보려면 <strong> ls </strong> , 기본 Linux 명령어 가이드를 확인하세요. </p>"}