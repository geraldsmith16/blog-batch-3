{"title":"Jak łatwo szyfrować i odszyfrowywać pliki i katalogi w systemie Linux","content":"<p> Czy kiedykolwiek chciałeś szybko i łatwo szyfrować pliki w systemie Linux bez konieczności instalowania i uczenia się nowych pakietów oprogramowania? Oto doskonały i łatwy sposób na łatwe szyfrowanie plików lub katalogów za pomocą AES256 zabezpieczonego hasłem, co pomaga trzymać pliki z dala od wścibskich oczu. </p> <h2 id=\"the-basics-of-encryption-with-openssl\"> Podstawy szyfrowania za pomocą OpenSSL </h2> <p> Należy pamiętać, że szyfrowanie to znacznie więcej. </p> <p> Rozsądne może być przeczytanie tego <a href=\"https://www.openssl.org/docs/\" target=\"_blank\" rel=\"nofollow noopener\"> Dokumentacja OpenSSL </a> zanim zaufasz tej metodzie swoimi danymi. Niemniej jednak, zakładając, że nie próbujesz uniknąć NSA lub rosyjskiego wojska, ta metoda powinna działać idealnie, aby Twoje pliki i katalogi były bezpieczne i niedostępne dla innych. </p> <p> </p> <h2 id=\"install-openssl\"> Zainstaluj OpenSSL </h2> <p> Potrzebujesz zainstalowanego popularnego pakietu OpenSSL, więc najpierw sprawdź, czy jest już zainstalowany z <a href=\"https://www.makeuseof.com/basic-commands-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Polecenie Linuksa </a> : </p> <pre><code class=\"hljs\">openssl version</code></pre> <p> Jeśli wyświetla bieżący numer wersji, wszystko jest gotowe do następnej sekcji. W przeciwnym razie, jeśli pojawi się błąd „nie znaleziono polecenia”, możesz łatwo zainstalować OpenSSL za pomocą apt-get: </p> <pre><code class=\"hljs perl\">sudo apt-get -y install openssl</code></pre> <p> </p> <h2 id=\"encrypt-and-decrypt-files\"> Szyfrowanie i odszyfrowywanie plików </h2> <p> Na przykład, jeśli chcesz zaszyfrować plik o nazwie data.tar.gz, uruchom polecenie: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -a -salt -iter 5 -in data.tar.gz -out data.enc</code></pre> <p> Zostaniesz poproszony o dwukrotne wprowadzenie hasła szyfrowania, które może być dowolne. To polecenie spowoduje utworzenie nowego pliku data.enc jako nowo zaszyfrowanego pliku. Pamiętaj, że pozostawi to oryginalny plik data.tar.gz na swoim miejscu, więc w razie potrzeby usuń go. </p> <p> W razie potrzeby możesz odszyfrować plik data.enc za pomocą polecenia: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in data.enc -out data_decrypted.tar.gz</code></pre> <p> Powyższe polecenie wyświetli monit o hasło szyfrowania, a następnie spowoduje utworzenie pliku data_decrypted.tar.gz zawierającego odszyfrowaną wersję pliku. </p> <p> </p> <h2 id=\"encrypt-and-decrypt-directories\"> Szyfrowanie i odszyfrowywanie katalogów </h2> <p> Polecenia w powyższej sekcji działają świetnie dla pojedynczych plików, ale co się stanie, jeśli chcesz zaszyfrować cały katalog? Nie ma wbudowanej obsługi w OpenSSL, ale dzięki magii Linuksa nie stanowi to problemu. Na przykład, jeśli chcesz zaszyfrować katalog o nazwie „dokumenty”, możesz użyć polecenia: </p> <pre><code class=\"hljs\">tar -cf tmpdata.tar documents && gzip tmpdata.tar && openssl aes-256-cbc -a -salt -iter 5 -in tmpdata.tar.gz -out documents.enc && rm -f tmpdata.tar.gz</code></pre> <p> Trochę kęs, ale jedyne dwa miejsca w powyższym poleceniu, które musisz zmodyfikować, to „dokumenty” w pierwszym segmencie, który jest katalogiem do zaszyfrowania, i „documents.enc” w trzecim segmencie, który jest wynikowym zaszyfrowanym plikiem. To polecenie zarchiwizuje katalog, zaszyfruje go, a następnie usunie utworzone archiwum tymczasowe, pozostawiając na swoim miejscu pojedynczy zaszyfrowany plik documents.enc. </p> <p> Odszyfrowanie nowo utworzonego pliku documents.enc jest równie proste za pomocą polecenia: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in documents.enc -out tmpdata.tar.gz && tar -xzf tmpdata.tar.gz && rm -f tmpdata.tar.gz</code></pre> <p> Jedyną częścią powyższego polecenia, którą musisz zmodyfikować, jest „documents.enc” w pierwszym segmencie, który jest nazwą zaszyfrowanego pliku. To polecenie wyświetli monit o hasło szyfrowania, przystąpi do odszyfrowania i rozpakowania archiwum, a następnie usunie archiwum tymczasowe, pozostawiając w rezultacie odszyfrowany katalog. </p> <p> </p> <h2 id=\"protect-your-data\"> Chroń swoje dane </h2> <p> Teraz, gdy wiesz, jak łatwo jest szybko zaszyfrować i odszyfrować swoje dane, wykorzystaj swoją wiedzę i zabezpiecz swoje prywatne dane i unikaj <a href=\"https://www.makeuseof.com/worst-data-breaches/\" target=\"_blank\" rel=\"nofollow noopener\"> naruszenia danych </a> . Ponownie, aby powtórzyć, szyfrowanie to znacznie więcej niż przedstawione tutaj, a powyższe nie ma na celu unikania organów ścigania lub wysoko wykwalifikowanych i zdeterminowanych hakerów. </p> <p> Jeśli jednak chcesz po prostu uchronić swoje dane przed wścibskimi spojrzeniami, takimi jak szwagier czy serwisant komputerowy, to powyższe metody powinny załatwić sprawę. </p>"}