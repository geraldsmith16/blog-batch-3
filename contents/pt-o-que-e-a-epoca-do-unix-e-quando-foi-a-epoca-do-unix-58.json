{"title":"O que é a época do Unix e quando foi a época do Unix?","content":"<p> Por que o Unix tem seu próprio conceito de tempo? Qual é a época e qual é o problema do Y2038? </p> <p> A hora Unix é um meio de representar uma data e hora específicas, usada pelo Linux, macOS e muitos outros sistemas interoperáveis. É tão difundido que provavelmente você o está usando sem estar ciente disso. Depois de entender o tempo Unix, no entanto, você o verá em muitos contextos. Várias ferramentas podem ajudá-lo a trabalhar com o tempo Unix. </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> Qual é o propósito do tempo Unix? </h2> <p> O tempo Unix é uma contagem do total de segundos desde uma data e hora fixas. É um formato de data / hora (ou carimbo de data / hora) que parece diferente das datas e horas legíveis que estamos acostumados. Isso é puramente por razões de eficiência. Demora muito menos espaço para armazenar um único número que representa os segundos do que para armazenar valores separados para o ano, mês, hora, etc. </p> <p> Claro, em termos modernos, a diferença de espaço não é tanta. Mas considere que o Unix se originou no final dos anos 1960, quando o armazenamento disponível era muito menor. Os carimbos de data / hora também são muito usados, portanto, seu armazenamento aumenta. Por exemplo, cada arquivo possui três carimbos de data / hora associados a ele. </p> <p> O formato é praticamente impossível de traduzir em sua cabeça, a menos que você seja um gênio matemático. Mas ainda tem algumas vantagens sobre alternativas mais legíveis, como <strong> Quarta, 21 de outubro de 2015 07:28:00 GMT </strong> . Você pode solicitar dois carimbos de data / hora Unix com muita facilidade. Também é geralmente mais rápido descobrir a diferença entre dois carimbos de data / hora. Isso é especialmente verdadeiro para datas próximas, como em dias adjacentes. </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> Sobre a época </h3> <p> Portanto, o tempo Unix é uma contagem total de segundos desde um ponto específico no tempo. Mas qual é esse momento? Seu <strong> 00:00:00 UTC </strong> sobre <strong> 1 de janeiro de 1970 </strong> . Isso geralmente é conhecido como Unix Epoch. Os programadores escolheram esta data para a época por conveniência, uma vez que era a data mais próxima quando inventaram a hora Unix. </p> <p> Você pode muito bem ter visto essa data em que algo deu errado. É claramente um bug, mas que parece muito estranho quando resulta em uma data anterior à época em que muitos de nós nascemos! É completamente compreensível, porém, quando você sabe sobre o tempo do Unix. Se algum sistema está tentando exibir um carimbo de data / hora que não tem nenhum valor, muitas vezes será convertido em 0 e resultará na data de época exata </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> O formato de dados de tempo Unix </h2> <p> Estritamente falando, não existe um. O tipo de dados original era um número inteiro de 32 bits e isso geralmente permanece, mesmo em sistemas muito mais poderosos. </p> <p> Este tipo de dados permite que o valor armazene um total de 2 ^ 32 segundos, o que é pouco mais de 136 anos. Esse valor normalmente é assinado, o que significa que pode ser negativo ou positivo. Portanto, geralmente representa 68 anos em cada lado da época, ou seja, 1902-2038. </p> <p> Este ainda é um período limitado, é claro. Mas o uso principal do formato de carimbo de data / hora era para conceitos como modificação de arquivo. A necessidade era muito representar o tempo próximo ao presente, ao invés da história antiga ou distante no futuro. Mesmo para aplicativos como calendários, raramente há a necessidade de representar datas mais do que algumas décadas no futuro. </p> <p> Mas isso não significa que esse período de tempo limitado seja sem problemas ... </p> <h3 id=\"the-year-2038-problem\"> O Problema do Ano 2038 </h3> <p> O Bug Y2K ( <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> um dos piores erros de programação da história </a> ) afetou os sistemas de computador que armazenavam anos como valores de dois dígitos. Quando chegou o ano de 2000, esses sistemas o trataram como se fosse 1900. No caso, isso não foi tão catastrófico quanto temia, principalmente porque muitas pessoas gastaram muito tempo e esforço com antecedência, preparando-se para isso. </p> <p> Se você prestou atenção na seção anterior, pode ter notado um problema semelhante que pode afetar o tempo do Unix. Bem, o tempo Unix tem um problema de dados próprio: o problema Y2k38. (Isso costuma ser referido como um problema, não um bug; talvez tenhamos nos tornado mais otimistas desde o ano 2000!) Quando o tempo do Unix literalmente acabar em 2038, os sistemas tratarão as novas datas como 1902 ou 1970. Ou possivelmente eles Eu simplesmente falharei completamente. </p> <p> Pelo menos esse problema não nos atingirá à meia-noite da véspera de Ano Novo. O segundo final do tempo Unix de 32 bits cairá no dia 19 de março. Na eventualidade, provavelmente iremos atualizar a maioria dos sistemas até 2038 ou eles estarão obsoletos até então. </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> Alguns recursos úteis de carimbo de data / hora </h2> <p> O <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> Conversor de época </a> site é possivelmente o conversor de carimbo de data / hora mais abrangente disponível. Ele começa exibindo o tempo Unix atual - em tempo real - e adiciona quase todos os recursos imagináveis ​​além disso. Seu principal uso é para converter entre carimbos de data / hora e datas legíveis por humanos, em ambas as direções. </p> <p> Dan’s Tools é uma enorme coleção de aplicativos úteis da web, um dos quais é um <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> conversor de carimbo de data / hora </a> . É mais básico, mas tem uma apresentação muito limpa e é fácil de usar. </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> Tempo é </a> apresenta outro visual ainda mais minimalista. Mostra a hora em vários formatos, incluindo a hora Unix. Inclui a hora atual no título da página, o que é útil. </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> Usando Tempo Unix com Ferramentas de Linha de Comando </h2> <p> No Linux e macOS, o <strong> data </strong> O programa é o utilitário principal para lidar com data / hora, incluindo carimbos de data / hora Unix. Chamado sem nenhum argumento, ele retorna a data / hora atual em um formato legível: </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> Se você precisa da data / hora atual no horário Unix, use o <strong> +% s </strong> argumento: </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> Você pode converter de uma data legível para humanos em um carimbo de data / hora usando o <strong> -d </strong> sinalize se sua versão de <strong> data </strong> suporta isso. A maioria das versões do Linux deve, por padrão: </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> No macOS, <strong> data </strong> é um programa diferente, que requer um conjunto diferente de sinalizadores: </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> Indo na outra direção, você pode converter de um carimbo de data / hora Unix usando o <strong> -r </strong> bandeira: </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> Alguns outros programas usam o <strong> % s </strong> formato para lidar com o tempo Unix. Por exemplo, se você deseja mostrar a data de modificação de um arquivo no tempo Unix, com o <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Versão Linux de <strong> ls </strong></a> , você pode usar o seguinte: </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> Como Usar Tempo Unix em Linguagens de Programação </h2> <p> PHP tem o <strong> Tempo() </strong> função que retorna o carimbo de data / hora Unix atual. Seu <strong> data() </strong> função leva um carimbo de data / hora como seu segundo argumento: </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript aborda as coisas de uma maneira interessante. Tem um <strong> Date.now () </strong> método para obter o número de milissegundos desde a época do Unix. Claro, você pode dividir isso por 1.000 e arredondar o resultado para fornecer o tempo Unix equivalente em segundos: </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> Compreendendo o tempo Unix </h2> <p> O tempo Unix é um conceito simples que surge em muitos lugares. Depois de entendê-lo, você pode achar que é bastante útil, ao calcular diferenças de tempo, por exemplo. Você também pode reconhecer quando pode ser a causa de certos bugs. </p> <p> Conceitos como época e carimbo de data / hora são uma parte importante da introdução ao Linux. Para saber mais sobre itens essenciais, como <strong> ls </strong> , verifique nosso guia de comandos básicos do Linux. </p>"}