{"title":"Как легко зашифровать и расшифровать файлы и каталоги в Linux","content":"<p> Вы когда-нибудь хотели быстро и легко зашифровать файлы в Linux без необходимости устанавливать и изучать новые программные пакеты? Вот отличный и простой способ легко зашифровать файлы или каталоги с помощью AES256, защищенного паролем, помогая защитить ваши файлы от посторонних глаз. </p> <h2 id=\"the-basics-of-encryption-with-openssl\"> Основы шифрования с помощью OpenSSL </h2> <p> Важно отметить, что шифрование - это гораздо больше, чем это. </p> <p> Возможно, с вашей стороны будет благоразумно прочитать <a href=\"https://www.openssl.org/docs/\" target=\"_blank\" rel=\"nofollow noopener\"> Документация OpenSSL </a> прежде чем доверять этому методу свои данные. Тем не менее, если вы не пытаетесь уклониться от АНБ или российских военных, этот метод должен отлично работать для обеспечения безопасности и недоступности ваших файлов и каталогов для других. </p> <p> </p> <h2 id=\"install-openssl\"> Установить OpenSSL </h2> <p> Вам необходимо установить популярный пакет OpenSSL, поэтому сначала проверьте, установлен ли он уже с <a href=\"https://www.makeuseof.com/basic-commands-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Команда Linux </a> : </p> <pre><code class=\"hljs\">openssl version</code></pre> <p> Если он напечатает номер текущей версии, вы готовы к следующему разделу. В противном случае, если вы получите ошибку «команда не найдена», вы можете легко установить OpenSSL с помощью apt-get: </p> <pre><code class=\"hljs perl\">sudo apt-get -y install openssl</code></pre> <p> </p> <h2 id=\"encrypt-and-decrypt-files\"> Зашифровать и расшифровать файлы </h2> <p> Например, если вы хотите зашифровать файл с именем data.tar.gz, вы должны выполнить команду: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -a -salt -iter 5 -in data.tar.gz -out data.enc</code></pre> <p> Вам будет предложено дважды ввести пароль шифрования, который может быть любым. Эта команда приведет к созданию нового файла data.enc в качестве нового зашифрованного файла. Учтите, что при этом на месте останется исходный файл data.tar.gz, поэтому при необходимости обязательно удалите его. </p> <p> При желании вы можете расшифровать файл data.enc с помощью команды: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in data.enc -out data_decrypted.tar.gz</code></pre> <p> Приведенная выше команда запросит у вас пароль шифрования, а затем создаст файл data_decrypted.tar.gz, содержащий расшифрованную версию вашего файла. </p> <p> </p> <h2 id=\"encrypt-and-decrypt-directories\"> Зашифровать и расшифровать каталоги </h2> <p> Команды в приведенном выше разделе отлично подходят для отдельных файлов, но что произойдет, если вы захотите зашифровать весь каталог? В OpenSSL нет встроенной поддержки для этого, но благодаря магии Linux это не проблема. Например, если вы хотите зашифровать каталог с именем «документы», вы можете использовать команду: </p> <pre><code class=\"hljs\">tar -cf tmpdata.tar documents && gzip tmpdata.tar && openssl aes-256-cbc -a -salt -iter 5 -in tmpdata.tar.gz -out documents.enc && rm -f tmpdata.tar.gz</code></pre> <p> Немного громоздко, но единственные два места в приведенной выше команде, которые вам нужно изменить, - это «документы» в первом сегменте, который является каталогом для шифрования, и «documents.enc» в третьем сегменте, который представляет собой результирующий зашифрованный файл. Эта команда заархивирует каталог, зашифрует его, а затем удалит созданный временный архив, оставив на его месте один зашифрованный файл documents.enc. </p> <p> Расшифровать только что созданный файл documents.enc так же просто с помощью команды: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in documents.enc -out tmpdata.tar.gz && tar -xzf tmpdata.tar.gz && rm -f tmpdata.tar.gz</code></pre> <p> Единственная часть приведенной выше команды, которую вам нужно изменить, - это «documents.enc» в первом сегменте, который является именем зашифрованного файла. Эта команда запросит у вас пароль шифрования, приступит к расшифровке и распаковке архива, а затем удалит временный архив, в результате чего останется расшифрованный каталог. </p> <p> </p> <h2 id=\"protect-your-data\"> Защитите свои данные </h2> <p> Теперь, когда вы знаете, как легко быстро зашифровать и расшифровать ваши данные, примените свои знания и сохраните свои личные данные в безопасности и избегайте <a href=\"https://www.makeuseof.com/worst-data-breaches/\" target=\"_blank\" rel=\"nofollow noopener\"> утечки данных </a> . Еще раз повторяю, шифрование - это гораздо больше, чем представлено здесь, и вышеизложенное не предназначено для уклонения от правоохранительных органов или высококвалифицированных и решительных хакеров. </p> <p> Однако, если вы просто хотите защитить свои данные от посторонних глаз, например, от зятя или специалиста по ремонту компьютеров, то описанные выше методы должны прекрасно справиться с задачей. </p>"}