{"title":"Что такое время Unix и когда наступила эпоха Unix?","content":"<p> Почему в Unix есть собственное понятие времени? Какая эпоха и в чем проблема Y2038? </p> <p> Время Unix - это средство представления определенной даты и времени, используемое Linux, macOS и многими другими совместимыми системами. Он настолько распространен, что вы, вероятно, используете его, даже не подозревая об этом. Однако, как только вы поймете время Unix, вы заметите его во многих контекстах. Несколько инструментов могут помочь вам в работе со временем Unix. </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> Какова цель Unix Time? </h2> <p> Время Unix - это количество секунд, прошедших с фиксированной даты и времени. Это формат даты и времени (или отметки времени), который отличается от привычных нам удобочитаемых дат и времени. Это чисто из соображений эффективности. Для хранения одного числа, представляющего секунды, требуется намного меньше места, чем для хранения отдельных значений для года, месяца, часа и т. Д. </p> <p> Конечно, говоря современным языком, разница в пространстве не так уж и велика. Но учтите, что Unix возник в конце 1960-х годов, когда доступное хранилище было намного меньше. Также часто используются временные метки, поэтому их хранилище увеличивается. Например, с каждым файлом связаны три метки времени. </p> <p> Формат практически невозможно перевести в уме, если вы не гений математики. Но у него все еще есть некоторые преимущества перед более читаемыми альтернативами, такими как <strong> Ср, 21 окт 2015 07:28:00 GMT </strong> . Вы можете легко и быстро заказать две метки времени Unix. Также обычно быстрее определить разницу между двумя отметками времени. Это особенно верно для дат, близких друг к другу, например, в соседние дни. </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> Об эпохе </h3> <p> Итак, время Unix - это общее количество секунд с определенного момента времени. Но что это за момент времени? Его <strong> 00:00:00 UTC </strong> на <strong> 1 января 1970 г. </strong> . Это часто называют эпохой Unix. Программисты выбрали эту дату для эпохи из соображений удобства, поскольку это была ближайшая круглая дата, когда они изобрели время Unix. </p> <p> Возможно, вы видели эту дату, когда что-то пошло не так. Очевидно, что это ошибка, но она выглядит очень странно, когда она приводит к дате, предшествующей тому времени, когда многие из нас родились! Однако это совершенно понятно, когда вы знаете о времени Unix. Если какая-либо система пытается отобразить метку времени, которая не имеет значения, она часто преобразуется в 0 и приводит к точной дате эпохи. </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> Формат данных времени Unix </h2> <p> Собственно говоря, нет. Исходным типом данных было 32-битное целое число, и это часто остается так, даже в гораздо более мощных системах. </p> <p> Этот тип данных позволяет значению хранить в общей сложности 2 ^ 32 секунды, что составляет чуть более 136 лет. Это значение обычно подписано, что означает, что оно может быть отрицательным или положительным. Таким образом, обычно это 68 лет по обе стороны от эпохи, то есть с 1902 по 2038 годы. </p> <p> Конечно, это еще ограниченный период. Но в основном формат временной метки использовался для таких понятий, как модификация файлов. Очень важно было представить время, близкое к настоящему, а не древнюю историю или далекое будущее. Даже для таких приложений, как календари, редко возникает необходимость представлять даты более чем на несколько десятилетий в будущем. </p> <p> Но это не значит, что в этом ограниченном промежутке времени нет проблем ... </p> <h3 id=\"the-year-2038-problem\"> Проблема 2038 года </h3> <p> Ошибка 2000 года ( <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> одна из худших ошибок программирования в истории </a> ) затронули компьютерные системы, которые хранят годы в виде двузначных значений. Когда наступил 2000 год, такие системы относились к нему так, как будто это был 1900 год. В действительности это было не так катастрофично, как предполагалось, главным образом потому, что многие люди заранее потратили много времени и усилий, готовясь к нему. </p> <p> Если бы вы обратили внимание на предыдущий раздел, вы могли бы заметить аналогичную проблему, которая может повлиять на время Unix. Что ж, у Unix time есть собственная проблема с данными: проблема Y2k38. (Это часто называют проблемой, а не ошибкой; возможно, мы стали более оптимистичными с 2000 года!) Когда время Unix буквально истечет в 2038 году, системы будут рассматривать новые даты как 1902 или 1970. Или, возможно, они &#39; Я просто потерплю неудачу. </p> <p> По крайней мере, эта проблема нас не коснется ровно в полночь в канун Нового года. Последняя секунда 32-битного времени Unix приходится на 19 марта. В конечном итоге мы, скорее всего, модернизируем большинство систем к 2038 году, или к тому времени они все равно устареют. </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> Некоторые полезные ресурсы по меткам времени </h2> <p> В <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> Конвертер эпохи </a> site, возможно, является наиболее полным доступным конвертером временных меток. Он начинается с отображения текущего времени Unix - в реальном времени - и добавляет к этому почти все мыслимые функции. Его основное использование - для преобразования между отметками времени и датами, удобочитаемыми человеком, в обоих направлениях. </p> <p> Dan’s Tools - это огромная коллекция полезных веб-приложений, одно из которых <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> конвертер временных меток </a> . Он более простой, но имеет очень четкое представление и прост в использовании. </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> Время - это </a> представляет другой, еще более минималистичный вид. Он показывает время в нескольких форматах, включая время Unix. Он включает в себя текущее время в заголовке страницы, что полезно. </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> Использование Unix Time с инструментами командной строки </h2> <p> В Linux и macOS <strong> Дата </strong> Программа - это основная утилита для работы с датой / временем, включая временные метки Unix. Вызывается без каких-либо аргументов, возвращает текущую дату / время в удобочитаемом формате: </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> Если вам нужна текущая дата / время во времени Unix, используйте <strong> +% s </strong> аргумент: </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> Вы можете преобразовать дату, удобочитаемую человеком, в метку времени, используя <strong> -d </strong> отметьте, если ваша версия <strong> Дата </strong> поддерживает это. Большинство версий Linux по умолчанию должны: </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> В macOS <strong> Дата </strong> это другая программа, требующая другого набора флагов: </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> Идя в другом направлении, вы можете преобразовать временную метку Unix, используя <strong> -р </strong> флаг: </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> Некоторые другие программы используют <strong> % s </strong> формат для работы со временем Unix. Например, если вы хотите показать дату изменения файла во времени Unix, с <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Версия для Linux <strong> ls </strong></a> , вы можете использовать следующее: </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> Как использовать Unix Time на языках программирования </h2> <p> PHP имеет <strong> время() </strong> функция, которая возвращает текущую временную метку Unix. Его <strong> Дата() </strong> функция принимает метку времени в качестве второго аргумента: </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript подходит к вещам интересным образом. Оно имеет <strong> Date.now () </strong> чтобы получить количество миллисекунд с эпохи Unix. Конечно, вы можете разделить это на 1000 и округлить результат, чтобы получить эквивалентное время Unix в секундах: </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> Понимание времени Unix </h2> <p> Время Unix - это простая концепция, которая возникает во многих местах. Как только вы это поймете, вы можете найти его весьма полезным, например, при вычислении разницы во времени. Вы также можете определить, когда это может быть причиной определенных ошибок. </p> <p> Такие понятия, как эпоха и временные метки, являются важной частью начала работы с Linux. Чтобы узнать больше о таких важных вещах, как <strong> ls </strong> , ознакомьтесь с нашим руководством по основным командам Linux. </p>"}