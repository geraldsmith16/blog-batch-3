{"title":"เวลา Unix คืออะไรและเมื่อใดคือยุค Unix?","content":"<p> ทำไม Unix ถึงมีแนวคิดเรื่องเวลาเป็นของตัวเอง? ยุคคืออะไรและปัญหา Y2038 คืออะไร? </p> <p> เวลา Unix เป็นวิธีการแสดงวันที่และเวลาเฉพาะที่ใช้โดย Linux, macOS และระบบที่ทำงานร่วมกันได้ มันแพร่หลายมากจนคุณอาจใช้มันโดยไม่รู้ตัว เมื่อคุณเข้าใจเวลา Unix แล้ว คุณจะมองเห็นได้ในหลายบริบท เครื่องมือหลายอย่างสามารถช่วยให้คุณทำงานกับ Unix time ได้ </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> จุดประสงค์ของเวลา Unix คืออะไร? </h2> <p> เวลา Unix คือจำนวนวินาทีทั้งหมดนับตั้งแต่วันที่และเวลาที่กำหนด เป็นรูปแบบวันที่/เวลา (หรือประทับเวลา) ที่ดูแตกต่างจากวันที่และเวลาที่มนุษย์อ่านได้ที่เราคุ้นเคย นี่เป็นเพียงเหตุผลด้านประสิทธิภาพเท่านั้น ใช้พื้นที่น้อยกว่ามากในการจัดเก็บตัวเลขเดี่ยวที่แทนวินาทีมากกว่าการเก็บค่าแยกสำหรับปี เดือน ชั่วโมง ฯลฯ </p> <p> แน่นอน ในแง่สมัยใหม่ ความแตกต่างของพื้นที่ไม่ได้มีอะไรมากขนาดนั้น แต่ให้พิจารณาว่า Unix มีต้นกำเนิดในปลายทศวรรษที่ 1960 เมื่อพื้นที่เก็บข้อมูลที่มีอยู่มีขนาดเล็กกว่ามาก การประทับเวลาก็ใช้กันมากเช่นกัน ดังนั้นที่เก็บข้อมูลจึงเพิ่มขึ้น ตัวอย่างเช่น ทุกไฟล์มีการประทับเวลาที่เกี่ยวข้องสามครั้ง </p> <p> รูปแบบนี้แทบจะเป็นไปไม่ได้เลยที่จะแปลในหัวของคุณ เว้นแต่คุณจะเป็นอัจฉริยะทางคณิตศาสตร์ แต่ก็ยังมีข้อดีเหนือทางเลือกอื่นที่อ่านง่ายกว่าเช่น <strong> วันพุธที่ 21 ต.ค. 2558 07:28:00 GMT </strong> . คุณสามารถสั่งซื้อการประทับเวลา Unix สองรายการได้อย่างง่ายดายเพียงชำเลืองมอง โดยปกติแล้ว การหาความแตกต่างระหว่างการประทับเวลาสองครั้งมักจะเร็วกว่าด้วย โดยเฉพาะอย่างยิ่งในวันที่อยู่ใกล้กัน เช่น วันที่ติดกัน </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> เกี่ยวกับ ยุค </h3> <p> ดังนั้น เวลา Unix คือการนับรวมของวินาทีตั้งแต่จุดใดเวลาหนึ่ง แต่เวลานั้นคืออะไร? มันคือ <strong> 00:00:00 UTC </strong> บน <strong> 1 มกราคม 2513 </strong> . ซึ่งมักเรียกกันว่ายุค Unix โปรแกรมเมอร์เลือกวันที่นี้สำหรับยุคตามความสะดวก เนื่องจากเป็นวันที่ใกล้เคียงที่สุดเมื่อพวกเขาคิดค้นเวลา Unix </p> <p> คุณอาจเคยเห็นวันที่นี้เมื่อมีบางอย่างผิดพลาด เห็นได้ชัดว่าเป็นแมลง แต่สิ่งที่ดูแปลกมากเมื่อเกิดวันที่ก่อนเวลาที่พวกเราหลายคนเกิด! เป็นเรื่องที่เข้าใจได้อย่างสมบูรณ์ แต่เมื่อคุณรู้เกี่ยวกับเวลา Unix หากระบบใดพยายามแสดงการประทับเวลาที่ไม่มีค่าใด ๆ ระบบมักจะแปลเป็น 0 และส่งผลให้วันที่ของยุคที่แน่นอน </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> รูปแบบข้อมูล Unix Time </h2> <p> พูดอย่างเคร่งครัดไม่มี ชนิดข้อมูลดั้งเดิมเป็นจำนวนเต็ม 32 บิต และมักจะเป็นเช่นนี้ แม้จะอยู่ในระบบที่ทรงพลังกว่ามาก </p> <p> ชนิดข้อมูลนี้ช่วยให้ค่าสามารถเก็บได้ทั้งหมด 2^32 วินาที ซึ่งมีอายุเพียง 136 ปีเท่านั้น โดยทั่วไปค่านี้จะมีการลงนาม ซึ่งหมายความว่าค่านี้สามารถเป็นค่าลบหรือค่าบวกได้ ดังนั้นจึงมักหมายถึง 68 ปีทั้งสองด้านของยุค เช่น ค.ศ. 1902-2038 </p> <p> นี้ยังเป็นช่วงเวลาที่ จำกัด แน่นอน แต่การใช้งานหลักของรูปแบบการประทับเวลาสำหรับแนวคิดเช่นการแก้ไขไฟล์ ความจำเป็นอย่างมากในการแสดงเวลาให้ใกล้เคียงกับปัจจุบัน มากกว่าประวัติศาสตร์สมัยโบราณหรืออนาคตไกล แม้แต่สำหรับแอปพลิเคชันเช่นปฏิทิน ก็แทบไม่มีความจำเป็นต้องแสดงวันที่ในอนาคตอีกสองสามทศวรรษข้างหน้า </p> <p> แต่นั่นไม่ได้หมายความว่าช่วงเวลาที่จำกัดนี้จะไม่มีปัญหา... </p> <h3 id=\"the-year-2038-problem\"> ปัญหาปี 2038 </h3> <p> ข้อผิดพลาด Y2K ( <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> หนึ่งในข้อผิดพลาดด้านการเขียนโปรแกรมที่แย่ที่สุดในประวัติศาสตร์ </a> ) ส่งผลกระทบต่อระบบคอมพิวเตอร์ที่เก็บปีเป็นค่าสองหลัก เมื่อถึงปี 2543 ระบบดังกล่าวปฏิบัติต่อราวกับว่าเป็นปี 1900 ในกรณีนี้ เหตุการณ์นี้ไม่ได้เลวร้ายอย่างที่กลัว เนื่องจากคนส่วนใหญ่ใช้เวลาและความพยายามอย่างมากในการเตรียมตัว </p> <p> หากคุณให้ความสนใจในส่วนก่อนหน้านี้ คุณอาจพบปัญหาที่คล้ายกันซึ่งอาจส่งผลต่อเวลา Unix เวลา Unix มีปัญหาข้อมูลของตัวเอง: ปัญหา Y2k38 (มักเรียกกันว่าปัญหา ไม่ใช่ข้อบกพร่อง บางทีเราอาจมองโลกในแง่ดีมากขึ้นตั้งแต่ปี 2000!) เมื่อเวลา Unix หมดลงในปี 2038 ระบบจะถือว่าวันที่ใหม่เป็น 1902 หรือ 1970 หรืออาจเป็น จะล้มเหลวโดยสิ้นเชิง </p> <p> อย่างน้อยปัญหานี้จะไม่กระทบกระเทือนเราตอนเที่ยงคืนของวันส่งท้ายปีเก่า วินาทีสุดท้ายของเวลา Unix แบบ 32 บิตจะตกในวันที่ 19 มีนาคม ในท้ายที่สุด เราอาจจะทำการอัพเกรดระบบส่วนใหญ่ภายในปี 2038 มิฉะนั้นระบบจะล้าสมัยในตอนนั้น </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> แหล่งข้อมูลการประทับเวลาที่มีประโยชน์ </h2> <p> <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> ตัวแปลงยุค </a> ไซต์อาจเป็นตัวแปลงการประทับเวลาที่ครอบคลุมที่สุด เริ่มต้นด้วยการแสดงเวลา Unix ปัจจุบันแบบเรียลไทม์ และเพิ่มคุณสมบัติเกือบทุกอย่างเท่าที่จะจินตนาการได้ การใช้งานหลักคือการแปลงระหว่างการประทับเวลาและวันที่ที่มนุษย์อ่านได้ในทั้งสองทิศทาง </p> <p> Dan&#39;s Tools เป็นคอลเล็กชั่นเว็บแอปที่มีประโยชน์มากมาย หนึ่งในนั้นคือ a <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> ตัวแปลงการประทับเวลา </a> . เป็นพื้นฐานมากกว่า แต่มีการนำเสนอที่สะอาดตาและใช้งานง่าย </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> Time.is </a> นำเสนอรูปลักษณ์ที่เรียบง่ายยิ่งขึ้นไปอีก แสดงเวลาในรูปแบบต่างๆ รวมทั้งเวลา Unix รวมถึงเวลาปัจจุบันในชื่อหน้าซึ่งเป็นประโยชน์ </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> การใช้ Unix Time กับเครื่องมือบรรทัดคำสั่ง </h2> <p> บน Linux และ macOS ตัว <strong> วันที่ </strong> โปรแกรมเป็นยูทิลิตี้หลักสำหรับจัดการกับวันที่/เวลา รวมถึงการประทับเวลา Unix เรียกว่าโดยไม่มีข้อโต้แย้งใดๆ จะส่งกลับวันที่/เวลาปัจจุบันในรูปแบบที่มนุษย์อ่านได้: </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> หากคุณต้องการวันที่/เวลาปัจจุบันในเวลา Unix ให้ใช้ use <strong> +%s </strong> ข้อโต้แย้ง: </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> คุณสามารถแปลงจากวันที่ที่มนุษย์อ่านได้เป็นการประทับเวลาโดยใช้ using <strong> -d </strong> ตั้งค่าสถานะถ้าเวอร์ชันของคุณของ <strong> วันที่ </strong> สนับสนุนมัน เวอร์ชัน Linux ส่วนใหญ่ควรเป็นค่าเริ่มต้น: </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> บน macOS <strong> วันที่ </strong> เป็นโปรแกรมอื่น ซึ่งต้องใช้แฟล็กชุดอื่น: </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> ในอีกทางหนึ่ง คุณสามารถแปลงจากการประทับเวลา Unix โดยใช้ <strong> -r </strong> ธง: </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> โปรแกรมอื่นบางโปรแกรมใช้ <strong> %s </strong> รูปแบบเพื่อจัดการกับเวลา Unix ตัวอย่างเช่น หากคุณต้องการแสดงวันที่แก้ไขของไฟล์ในเวลา Unix ด้วยเครื่องหมาย <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> เวอร์ชันลินุกซ์ของ <strong> ลส </strong></a> คุณสามารถใช้สิ่งต่อไปนี้: </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> วิธีใช้เวลา Unix ในภาษาการเขียนโปรแกรม </h2> <p> PHP มี <strong> เวลา() </strong> ฟังก์ชั่นที่ส่งคืนการประทับเวลา Unix ปัจจุบัน ของมัน <strong> วันที่ () </strong> ฟังก์ชั่นใช้เวลาประทับเป็นอาร์กิวเมนต์ที่สอง: </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript เข้าใกล้สิ่งต่าง ๆ อย่างน่าสนใจ มันมี <strong> วันที่.ตอนนี้() </strong> วิธีรับจำนวนมิลลิวินาทีตั้งแต่ยุค Unix แน่นอน คุณสามารถหารด้วย 1,000 และปัดเศษผลลัพธ์เพื่อให้ได้เวลา Unix ที่เท่ากันในหน่วยวินาที: </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> ทำความเข้าใจกับ Unix Time </h2> <p> เวลา Unix เป็นแนวคิดง่ายๆ ที่เกิดขึ้นในหลาย ๆ ที่ เมื่อคุณเข้าใจแล้ว คุณอาจพบว่ามีประโยชน์ทีเดียว เช่น ในการคำนวณความแตกต่างของเวลา คุณยังรับรู้ได้ว่าเมื่อใดที่อาจเป็นสาเหตุของข้อบกพร่องบางอย่าง </p> <p> แนวคิด เช่น ยุคและการประทับเวลาเป็นส่วนสำคัญในการเริ่มต้นใช้งาน Linux เพื่อหาข้อมูลเพิ่มเติมเกี่ยวกับสิ่งจำเป็นเช่น <strong> ลส </strong> ดูคำแนะนำเกี่ยวกับคำสั่งพื้นฐานของ Linux </p>"}