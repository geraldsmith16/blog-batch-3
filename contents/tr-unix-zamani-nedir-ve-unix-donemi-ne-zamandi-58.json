{"title":"Unix Zamanı Nedir ve Unix Dönemi Ne Zamandı?","content":"<p> Unix&#39;in neden kendi zaman kavramı var? Çağ nedir ve Y2038 sorunu nedir? </p> <p> Unix saati, Linux, macOS ve diğer birçok birlikte çalışabilir sistem tarafından kullanılan belirli bir tarih ve saati temsil etmenin bir yoludur. O kadar yaygın ki, muhtemelen farkında olmadan kullanıyorsunuz. Unix zamanını anladığınızda, onu birçok bağlamda fark edeceksiniz. Birkaç araç, Unix zamanı ile çalışmanıza yardımcı olabilir. </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> Unix Zamanının Amacı Nedir? </h2> <p> Unix zamanı, sabit bir saat ve tarihten itibaren toplam saniye sayısıdır. Bu, alıştığımız insan tarafından okunabilir tarih ve saatlerden farklı görünen bir tarih/saat (veya zaman damgası) biçimidir. Bu tamamen verimlilik nedenlerinden dolayıdır. Saniyeleri temsil eden tek bir sayıyı saklamak, yıl, ay, saat vb. için ayrı değerleri saklamaktan çok daha az yer kaplar. </p> <p> Tabii ki, modern anlamda, alan farkı o kadar da fazla değil. Ancak Unix&#39;in, kullanılabilir depolamanın çok daha küçük olduğu 1960&#39;ların sonlarında ortaya çıktığını düşünün. Zaman damgaları da çok kullanılır, bu nedenle depolamaları artar. Örneğin, her dosyanın kendisiyle ilişkilendirilmiş üç zaman damgası vardır. </p> <p> Matematik dehası değilseniz, biçimi kafanızda çevirmek neredeyse imkansızdır. Ancak yine de daha okunabilir alternatiflere göre bazı avantajları vardır. <strong> 21 Ekim 2015 Çarşamba 07:28:00 GMT </strong> . Bir bakışta çok kolay bir şekilde iki Unix zaman damgası sipariş edebilirsiniz. Ayrıca iki zaman damgası arasındaki farkı bulmak genellikle daha hızlıdır. Bu, özellikle bitişik günler gibi birbirine yakın tarihler için geçerlidir. </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> Çağ Hakkında </h3> <p> Dolayısıyla, Unix zamanı, belirli bir zaman noktasından bu yana geçen toplam saniye sayısıdır. Ama zamanın bu noktası nedir? Onun <strong> 00:00:00 UTC </strong> üzerinde <strong> 1 Ocak 1970 </strong> . Bu genellikle Unix Çağı olarak adlandırılır. Programcılar, Unix zamanını icat ettiklerinde en yakın yuvarlak tarih olduğu için bu tarihi, kolaylık nedeniyle çağ için seçtiler. </p> <p> Bir şeyler ters gittiğinde bu tarihi görmüş olabilirsiniz. Açıkça bir hata, ancak çoğumuzun doğduğu zamandan önceki bir tarihle sonuçlandığında çok garip görünüyor! Yine de Unix zamanını bildiğinizde bu tamamen anlaşılabilir bir durumdur. Herhangi bir sistem herhangi bir değeri olmayan bir zaman damgası görüntülemeye çalışıyorsa, genellikle 0&#39;a çevrilir ve kesin dönem tarihi ile sonuçlanır. </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> Unix Zaman Veri Formatı </h2> <p> Kesin konuşmak gerekirse, öyle biri yok. Orijinal veri türü 32 bitlik bir tam sayıydı ve bu, çok daha güçlü sistemlerde bile genellikle böyle kalır. </p> <p> Bu veri türü, değerin 136 yıldan biraz fazla olan toplam 2^32 saniye depolamasına izin verir. Bu değer tipik olarak işaretlidir, yani negatif veya pozitif olabilir. Bu nedenle, genellikle çağın her iki tarafında, yani 1902-2038&#39;de 68 yılı temsil eder. </p> <p> Bu hala sınırlı bir süre tabi. Ancak zaman damgası biçiminin birincil kullanımı, dosya değişikliği gibi kavramlar içindi. Eski tarih ya da uzak geleceğe değil, şimdiki zamana yakın zamanı temsil etmeye çok ihtiyaç vardı. Takvimler gibi uygulamalar için bile, nadiren birkaç on yıldan daha ilerideki tarihleri ​​temsil etmeye ihtiyaç duyulur. </p> <p> Ancak bu, bu sınırlı zaman aralığının sorunsuz olduğu anlamına gelmez… </p> <h3 id=\"the-year-2038-problem\"> 2038 Yılı Sorunu </h3> <p> Y2K Hatası ( <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> tarihteki en kötü programlama hatalarından biri </a> ) yılları iki basamaklı değerler olarak depolayan bilgisayar sistemlerini etkiledi. 2000 yılı geldiğinde, bu tür sistemler ona 1900&#39;müş gibi davrandı. Aslında, bu korkulduğu kadar felaket değildi, çünkü birçok insan önceden hazırlanmak için çok zaman ve emek harcamıştı. </p> <p> Önceki bölüme dikkat ettiyseniz, Unix zamanını etkileyebilecek benzer bir sorun fark etmiş olabilirsiniz. Unix zamanının kendine ait bir veri sorunu var: Y2k38 sorunu. (Buna genellikle bir bug değil, bir problem denir; belki 2000 yılından beri daha iyimser olduk!) Unix zamanı 2038&#39;de tam anlamıyla dolduğunda, sistemler yeni tarihleri ​​ya 1902 ya da 1970 olarak değerlendirecek. Ya da muhtemelen onlar&#39; Tamamen başarısız olacak. </p> <p> En azından bu sorun, Yılbaşı Gecesi gece yarısı vuruşunda bizi vurmayacak. 32-bit Unix zamanının son saniyesi 19 Mart&#39;ta düşecek. Sonunda, muhtemelen çoğu sistemi 2038 yılına kadar yükselteceğiz ya da o zamana kadar zaten eskimiş olacaklar. </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> Bazı Faydalı Zaman Damgası Kaynakları </h2> <p> <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> Dönem Dönüştürücü </a> site muhtemelen mevcut en kapsamlı zaman damgası dönüştürücüsüdür. Geçerli Unix zamanını gerçek zamanlı olarak göstererek başlar ve bunun üzerine akla gelebilecek hemen hemen her özelliği ekler. Ana kullanımı, zaman damgaları ve insan tarafından okunabilir tarihler arasında her iki yönde de dönüşüm yapmaktır. </p> <p> Dan&#39;s Tools, kullanışlı web uygulamalarından oluşan devasa bir koleksiyondur. <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> zaman damgası dönüştürücü </a> . Daha basit, ancak çok temiz bir sunuma sahip ve kullanımı kolay. </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> Zaman </a> başka, daha da minimalist bir görünüm sunar. Unix zamanı da dahil olmak üzere bir dizi formatta zamanı gösterir. Sayfa başlığında geçerli saati içerir ve bu yararlıdır. </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> Unix Zamanını Komut Satırı Araçları ile Kullanma </h2> <p> Linux ve macOS&#39;ta, <strong> tarih </strong> programı, Unix zaman damgaları da dahil olmak üzere tarih/saat ile uğraşmak için temel yardımcı programdır. Herhangi bir argüman olmadan çağrıldığında, geçerli tarih/saati insan tarafından okunabilir bir biçimde döndürür: </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> Unix saatinde geçerli tarih/saate ihtiyacınız varsa, <strong> +%s </strong> argüman: </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> Kullanarak insan tarafından okunabilir bir tarihten zaman damgasına dönüştürebilirsiniz. <strong> -d </strong> sürümünüz varsa işaretleyin <strong> tarih </strong> onu destekler. Çoğu Linux sürümü varsayılan olarak şunları yapmalıdır: </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> macOS&#39;ta, <strong> tarih </strong> farklı bir dizi bayrak gerektiren farklı bir programdır: </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> Diğer yöne giderek, bir Unix zaman damgasından şunu kullanarak dönüştürebilirsiniz: <strong> -r </strong> bayrak: </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> Diğer bazı programlar, <strong> %s </strong> Unix zamanı ile başa çıkmak için format. Örneğin, bir dosyanın değiştirilme tarihini Unix zamanında göstermek istiyorsanız, <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Linux sürümü <strong> ls </strong></a> , aşağıdakileri kullanabilirsiniz: </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> Unix Time Programlama Dillerinde Nasıl Kullanılır </h2> <p> PHP&#39;nin sahip olduğu <strong> zaman() </strong> geçerli Unix zaman damgasını döndüren işlev. Onun <strong> tarih() </strong> işlev, ikinci argümanı olarak bir zaman damgası alır: </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript, olaylara ilginç bir şekilde yaklaşır. bir <strong> tarih.şimdi() </strong> Unix çağından bu yana geçen milisaniye sayısını alma yöntemi. Tabii ki, bunu 1.000&#39;e bölebilir ve sonucu, eşdeğer Unix süresini saniye cinsinden verecek şekilde yuvarlayabilirsiniz: </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> Unix Zamanını Anlamak </h2> <p> Unix zamanı, birçok yerde ortaya çıkan basit bir kavramdır. Bunu bir kez anladığınızda, örneğin zaman farklarını hesaplarken oldukça faydalı bulabilirsiniz. Belirli hataların nedeninin ne zaman olabileceğini de anlayabilirsiniz. </p> <p> Dönem ve zaman damgaları gibi kavramlar, Linux&#39;u kullanmaya başlamanın önemli bir parçasıdır. gibi temel bilgiler hakkında daha fazla bilgi edinmek için <strong> ls </strong> , temel Linux komutlarıyla ilgili kılavuzumuza göz atın. </p>"}