{"title":"Як легко шифрувати та розшифровувати файли та каталоги в Linux","content":"<p> Ви коли-небудь хотіли швидко і легко зашифрувати файли в Linux без необхідності встановлювати та вивчати нові програмні пакети? Ось чудовий і простий спосіб легко зашифрувати файли або каталоги за допомогою AES256, захищеного паролем, допомагаючи захистити файли від сторонніх очей. </p> <h2 id=\"the-basics-of-encryption-with-openssl\"> Основи шифрування за допомогою OpenSSL </h2> <p> Важливо зазначити, що для шифрування є набагато більше, ніж це. </p> <p> Можливо, вам буде розумно читати <a href=\"https://www.openssl.org/docs/\" target=\"_blank\" rel=\"nofollow noopener\"> Документація OpenSSL </a> перед довірою цього методу вашим даним. Тим не менше, припускаючи, що ви не намагаєтеся ухилитися від АНБ чи російських військових, цей метод повинен ідеально працювати, щоб захистити ваші файли та каталоги у безпеці та недоступності для інших. </p> <p> </p> <h2 id=\"install-openssl\"> Встановіть OpenSSL </h2> <p> Вам потрібен встановлений популярний пакет OpenSSL, тому спочатку перевірте, чи він вже встановлений за допомогою <a href=\"https://www.makeuseof.com/basic-commands-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Команда Linux </a> : </p> <pre><code class=\"hljs\">openssl version</code></pre> <p> Якщо він друкує номер поточної версії, ви готові до наступного розділу. В іншому випадку, якщо ви отримаєте помилку &quot;команду не знайдено&quot;, ви можете легко встановити OpenSSL через apt-get: </p> <pre><code class=\"hljs perl\">sudo apt-get -y install openssl</code></pre> <p> </p> <h2 id=\"encrypt-and-decrypt-files\"> Шифрувати та розшифровувати файли </h2> <p> Наприклад, якщо ви хочете зашифрувати файл з іменем data.tar.gz, ви запустите команду: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -a -salt -iter 5 -in data.tar.gz -out data.enc</code></pre> <p> Вам буде запропоновано ввести пароль шифрування двічі, і це може бути все, що завгодно. Ця команда призведе до створення нового файлу data.enc як нещодавно зашифрованого файлу. Зверніть увагу: це призведе до того, що оригінальний файл data.tar.gz залишиться на своєму місці, тому, будь-ласка, видаліть його, якщо це необхідно. </p> <p> За бажанням ви можете розшифрувати файл data.enc за допомогою команди: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in data.enc -out data_decrypted.tar.gz</code></pre> <p> Наведена вище команда запропонує вам ввести пароль шифрування, після чого з’явиться файл data_decrypted.tar.gz, що містить розшифровану версію вашого файлу. </p> <p> </p> <h2 id=\"encrypt-and-decrypt-directories\"> Шифрувати та розшифровувати каталоги </h2> <p> Команди у наведеному вище розділі чудово підходять для окремих файлів, але що станеться, якщо ви хочете зашифрувати цілий каталог? У OpenSSL для цього немає вбудованої підтримки, але завдяки магії Linux це не проблема. Наприклад, якщо ви хочете зашифрувати каталог з іменем &quot;документи&quot;, ви можете скористатися командою: </p> <pre><code class=\"hljs\">tar -cf tmpdata.tar documents && gzip tmpdata.tar && openssl aes-256-cbc -a -salt -iter 5 -in tmpdata.tar.gz -out documents.enc && rm -f tmpdata.tar.gz</code></pre> <p> Трохи з вуст, але єдиними двома місцями у наведеній вище команді, які потрібно змінити, є &quot;документи&quot; у першому сегменті, який є каталогом для шифрування, та &quot;documents.enc&quot; у третьому сегменті, що є отриманим зашифрованим файлом. Ця команда заархівує каталог, зашифрує його, а потім видалить створений тимчасовий архів, залишивши на своєму місці один зашифрований файл documents.enc. </p> <p> Розшифрувати щойно створений файл documents.enc так само просто за допомогою команди: </p> <pre><code class=\"hljs\">openssl aes-256-cbc -d -a -iter 5 -in documents.enc -out tmpdata.tar.gz && tar -xzf tmpdata.tar.gz && rm -f tmpdata.tar.gz</code></pre> <p> Єдиною частиною наведеної вище команди, яку потрібно змінити, є &quot;documents.enc&quot; у першому сегменті, що є ім&#39;ям зашифрованого файлу. Ця команда запропонує вам ввести пароль шифрування, перейдіть до розшифрування та розпакування архіву, а потім видаліть тимчасовий архів, залишивши розшифрований каталог в результаті. </p> <p> </p> <h2 id=\"protect-your-data\"> Захистіть свої дані </h2> <p> Тепер, коли ви знаєте, як легко швидко зашифрувати та розшифрувати ваші дані, використати свої знання та захистити ваші приватні дані та уникати <a href=\"https://www.makeuseof.com/worst-data-breaches/\" target=\"_blank\" rel=\"nofollow noopener\"> порушення даних </a> . Знову ж таки, повторюємо, що шифрування набагато більше, ніж представлене тут, і вищезазначене не покликане ухилятися від правоохоронних органів або висококваліфікованих та рішучих хакерів. </p> <p> Однак, якщо ви просто хочете захистити свої дані від сторонніх очей, таких як ваш швагер або технік з ремонту комп’ютерів, то вищезазначені методи повинні чудово впоратись. </p>"}