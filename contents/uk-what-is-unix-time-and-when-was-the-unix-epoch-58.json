{"title":"Що таке час Unix і коли була епоха Unix?","content":"<p> Чому Unix має свою власну концепцію часу? Яка епоха і в чому проблема Y2038? </p> <p> Час Unix - це спосіб представлення конкретної дати та часу, який використовується Linux, macOS та багатьма іншими взаємодіючими системами. Він настільки розповсюджений, що ви, мабуть, використовуєте його, не знаючи про це. Однак, як тільки ви зрозумієте час Unix, ви побачите його в багатьох контекстах. Кілька інструментів можуть допомогти вам працювати з часом Unix. </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> Яка мета часу Unix? </h2> <p> Час Unix - це загальна кількість секунд з фіксованого часу та дати. Це формат дати / часу (або позначки часу), який зовні відрізняється від зручних для читання дат та часу, до яких ми звикли. Це суто з міркувань ефективності. Для зберігання одного числа, що представляє секунди, потрібно набагато менше місця, ніж для зберігання окремих значень року, місяця, години тощо. </p> <p> Звичайно, у сучасних термінах різниця у просторі не зовсім така велика. Але враховуйте, що Unix виникла наприкінці 1960-х років, коли доступне сховище було набагато меншим. Часові позначки також часто використовуються, тому їх пам&#39;ять збільшується. Наприклад, кожен файл має три позначки часу, пов’язані з ним. </p> <p> Формат практично неможливо перекласти головою, якщо ви не математичний геній. Але він все ще має деякі переваги перед більш читабельними альтернативами, такими як <strong> Середа, 21 жовтня 2015 07:28:00 за Грінвичем </strong> . Ви можете замовити дві мітки часу Unix з одного погляду. Також зазвичай швидше визначається різниця між двома позначками часу. Це особливо справедливо для дат, що знаходяться близько, наприклад, у сусідні дні. </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> Про Епоху </h3> <p> Отже, час Unix - це загальна кількість секунд з певного моменту часу. Але який цей момент часу? Його <strong> 00:00:00 UTC </strong> на <strong> 1 січня 1970 року </strong> . Це часто називають епохою Unix. Програмісти вибрали цю дату для зручності, оскільки це була найближча кругла дата, коли вони винайшли час Unix. </p> <p> Можливо, ви вже бачили цю дату, коли щось пішло не так. Це явно помилка, але така, що виглядає дуже дивно, коли призводить до дати ще до того часу, як багато хто з нас народився! Однак це цілком зрозуміло, коли ти знаєш про час Unix. Якщо будь-яка система намагається відобразити позначку часу, яка не має жодного значення, вона часто переводиться на 0 і приводить до точної дати епохи. </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> Формат даних часу Unix </h2> <p> Власне кажучи, такого немає. Вихідним типом даних було 32-бітове ціле число, і це часто залишається справді навіть у набагато потужніших системах. </p> <p> Цей тип даних дозволяє зберігати значення в цілому 2 ^ 32 секунди, що становить трохи більше 136 років. Це значення, як правило, підписується, що означає, що воно може бути негативним або позитивним. Отже, це зазвичай представляє 68 років по обидва боки епохи, тобто 1902-2038. </p> <p> Звичайно, це все ще обмежений період. Але основне використання формату позначки часу було для таких понять, як модифікація файлів. Потрібно було дуже сильно представити час, близький до сьогодення, а не давню історію чи далеко в майбутнє. Навіть для таких програм, як календарі, рідко виникає потреба представляти дати, які перебувають на кілька десятиліть у майбутньому. </p> <p> Але це не означає, що цей обмежений проміжок часу без проблем ... </p> <h3 id=\"the-year-2038-problem\"> Проблема 2038 року </h3> <p> Помилка Y2K ( <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> одна з найгірших помилок програмування в історії </a> ) вплинули на комп’ютерні системи, які зберігали роки як двозначні значення. Коли настав 2000 рік, такі системи поводились з ним так, ніби це був 1900 рік. У випадку, це було не так катастрофічно, як боялися, головним чином тому, що багато людей витратили багато часу та зусиль заздалегідь, готуючись до цього. </p> <p> Якби ви звертали увагу в попередньому розділі, можливо, ви помітили подібну проблему, яка може вплинути на час Unix. Ну, Unix time має власну проблему з даними: проблема Y2k38. (Це часто називають проблемою, а не помилкою; можливо, ми стали більш оптимістичними з 2000 року!) Коли час Unix буквально закінчується в 2038 році, системи будуть трактувати нові дати або як 1902 або 1970. Або, можливо, вони &quot; я просто взагалі зазнаю невдачі. </p> <p> Принаймні ця проблема нас не вразить у північ напередодні Нового року. Фінальна секунда 32-розрядного часу Unix припаде на 19 березня. Врешті-решт, ми, ймовірно, оновимо більшість систем до 2038 року, або вони все одно застаріють до того часу. </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> Деякі корисні ресурси з позначкою часу </h2> <p> <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> Перетворювач епохи </a> site - це, можливо, найповніший доступний перетворювач позначок часу. Він починається з відображення поточного часу Unix - у реальному часі - і додає майже кожну можливість, яку можна уявити. Основне його використання полягає в перетворенні між позначками часу та зручними для читання датами в обох напрямках. </p> <p> Dan’s Tools - це величезна колекція корисних веб-програм, однією з яких є <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> перетворювач міток часу - </a> . Він є більш простим, але має дуже чітку презентацію та простий у використанні. </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> Час </a> представляє ще один, ще більш мінімалістичний вигляд. Він відображає час у багатьох форматах, включаючи час Unix. Це включає поточний час у заголовку сторінки, що є корисним. </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> Використання часу Unix за допомогою інструментів командного рядка </h2> <p> У Linux та macOS <strong> дата </strong> програма є основною утилітою для роботи з датою / часом, включаючи мітки часу Unix. Викликаний без будь-яких аргументів, він повертає поточну дату / час у зручному для читання форматі: </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> Якщо вам потрібна поточна дата / час за часом Unix, використовуйте <strong> +% s </strong> аргумент: </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> Ви можете перетворити з зручної для читання дати в мітку часу за допомогою <strong> -d </strong> прапорець, якщо ваша версія <strong> дата </strong> підтримує це. Більшість версій Linux за замовчуванням повинні: </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> На macOS, <strong> дата </strong> - це інша програма, яка вимагає іншого набору прапорів: </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> Переходячи в іншому напрямку, ви можете конвертувати з мітки часу Unix за допомогою <strong> -r </strong> прапор: </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> Деякі інші програми використовують <strong> % s </strong> формат для роботи з часом Unix. Наприклад, якщо ви хочете показати дату модифікації файлу за часом Unix, за допомогою <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Версія Linux <strong> ls </strong></a> , ви можете використовувати наступне: </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> Як використовувати час Unix в мовах програмування </h2> <p> PHP має <strong> час () </strong> функція, яка повертає поточну мітку часу Unix. Його <strong> дата() </strong> Функція приймає мітку часу як другий аргумент: </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript цікаво підходить до речей. Він має <strong> Date.now () </strong> метод, щоб отримати кількість мілісекунд з епохи Unix. Звичайно, ви можете поділити це на 1000 і округлити результат, щоб отримати еквівалентний час Unix у секундах: </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> Розуміння часу Unix </h2> <p> Unix time - це проста концепція, яка з’являється в багатьох місцях. Як тільки ви це зрозумієте, можливо, це буде вам дуже корисно, наприклад, при обчисленні різниці в часі. Ви також можете визнати, коли це може бути причиною певних помилок. </p> <p> Такі поняття, як епоха та позначки часу, є важливою частиною початку роботи з Linux. Щоб дізнатись більше про необхідне, наприклад <strong> ls </strong> , перегляньте наш посібник з основних команд Linux. </p>"}