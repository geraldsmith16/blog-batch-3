{"title":"什麼是 Unix 時間，Unix 時代是什麼時候？","content":"<p> 為什麼 Unix 有自己的時間概念？什麼是紀元，什麼是 Y2038 問題？ </p> <p> Unix 時間是一種表示特定日期和時間的方法，被 Linux、macOS 和許多其他可互操作的系統使用。它是如此普遍，以至於您可能在不知不覺中使用它。但是，一旦您了解了 Unix 時間，您就會在許多上下文中發現它。有幾個工具可以幫助您使用 Unix 時間。 </p> <h2 id=\"what-is-the-purpose-of-unix-time\"> Unix 時間的目的是什麼？ </h2> <p> Unix 時間是自固定時間和日期以來的總秒數。它是一種日期/時間（或時間戳）格式，看起來與我們習慣的人類可讀的日期和時間不同。這純粹是出於效率原因。與存儲單獨的年、月、小時等值相比，存儲表示秒的單個數字所需的空間要​​少得多。 </p> <p> 當然，用現代術語來說，空間差異根本沒有那麼大。但考慮到 Unix 起源於 1960 年代後期，當時可用存儲空間要小得多。時間戳也被大量使用，因此它們的存儲量加起來。例如，每個文件都有三個與之關聯的時間戳。 </p> <p> 除非您是數學天才，否則這種格式幾乎不可能在您的腦海中翻譯。但與更具可讀性的替代方案相比，它仍然具有一些優勢，例如 <strong> 2015 年 10 月 21 日，星期三 07:28:00 GMT </strong> .您可以非常輕鬆地訂購兩個 Unix 時間戳，一目了然。計算出兩個時間戳之間的差異通常也更快。對於相近的日期尤其如此，例如在相鄰的日子。 </p> <p> <img alt=\"A screenshot from the Epoch Converter site showing Unix Time\" src=\"images/epoch-converter-110.png\" loading=\"lazy\"> </p> <h3 id=\"about-the-epoch\"> 關於時代 </h3> <p> 因此，Unix 時間是自特定時間點以來的總秒數。但那個時間點是什麼？它的 <strong> 00:00:00 UTC </strong> 上 <strong> 1970 年 1 月 1 日 </strong> .這通常被稱為 Unix 時代。程序員為了方便選擇了這個日期，因為這是他們發明 Unix 時間的最接近的日期。 </p> <p> 當出現問題時，您很可能已經看到了這個日期。這顯然是一個錯誤，但是當它導致我們許多人出生之前的日期時看起來很奇怪！但是，當您了解 Unix 時間時，這是完全可以理解的。如果任何系統試圖顯示一個沒有任何值的時間戳，它通常會轉換為 0 並導致確切的紀元日期。 </p> <p> </p> <h2 id=\"the-unix-time-data-format\"> Unix 時間數據格式 </h2> <p> 嚴格來說，沒有。原始數據類型是 32 位整數，即使在功能更強大的系統中，情況也經常如此。 </p> <p> 這種數據類型允許值總共存儲 2^32 秒，剛好超過 136 年。這個值通常是有符號的，這意味著它可以是負數或正數。因此，它通常代表紀元兩側的 68 年，即 1902-2038。 </p> <p> 當然，這仍然是一個有限的時期。但是時間戳格式的主要用途是用於文件修改等概念。非常需要代表接近現在的時間，而不是古代歷史或遙遠的未來。即使對於日曆等應用程序，也很少需要表示未來幾十年之後的日期。 </p> <p> 但這並不意味著這個有限的時間跨度沒有問題...... </p> <h3 id=\"the-year-2038-problem\"> 2038年問題 </h3> <p> 千年蟲（ <a href=\"https://www.makeuseof.com/tag/worst-programming-mistakes-in-history/\" target=\"_blank\" rel=\"nofollow noopener\"> 歷史上最嚴重的編程錯誤之一 </a> ) 影響將年份存儲為兩位數值的計算機系統。到了2000年，這樣的系統把它當成1900年對待，其實這並沒有想像中的那麼災難性，主要是因為很多人提前花了很多時間和精力，為它做好了準備。 </p> <p> 如果您在上一節中註意了，您可能已經發現了可能影響 Unix 時間的類似問題。嗯，Unix 時間確實有它自己的數據問題：Y2k38 問題。 （它通常被稱為問題，而不是錯誤；也許自 2000 年以來我們變得更加樂觀！）當 Unix 時間在 2038 年真正用完時，系統會將新日期視為 1902 或 1970。或者可能是只會完全失敗。 </p> <p> 至少這個問題不會在新年前夜的午夜襲擊我們。 32 位 Unix 時間的最後一秒將落在 3 月 19 日。最終，我們很可能會在 2038 年之前升級大多數係統，否則無論如何它們都會過時。 </p> <p> </p> <h2 id=\"some-useful-timestamp-resources\"> 一些有用的時間戳資源 </h2> <p> 這 <a href=\"https://www.epochconverter.com/\" target=\"_blank\" rel=\"nofollow noopener\"> 時代轉換器 </a> site 可能是最全面的時間戳轉換器。它首先實時顯示當前的 Unix 時間，並在此基礎上添加幾乎所有可以想像的功能。它的主要用途是在時間戳和人類可讀的日期之間雙向轉換。 </p> <p> Dan&#39;s Tools 是大量有用的網絡應用程序的集合，其中一個是 <a href=\"https://www.unixtimestamp.com/index.php\" target=\"_blank\" rel=\"nofollow noopener\"> 時間戳轉換器 </a> .它更基本，但具有非常乾淨的演示文稿並且易於使用。 </p> <p> <a href=\"https://time.is/Unix_time_now\" target=\"_blank\" rel=\"nofollow noopener\"> 時間是 </a> 呈現另一種更簡約的外觀。它以多種格式顯示時間，包括 Unix 時間。它在其頁面標題中包含當前時間，這很有用。 </p> <p> <img alt=\"A screenshot of the Time.is websites showing Unix Time\" src=\"images/time-is-177.png\" loading=\"lazy\"> </p> <p> </p> <h2 id=\"using-unix-time-with-command-line-tools\"> 通過命令行工具使用 Unix 時間 </h2> <p> 在 Linux 和 macOS 上， <strong> 日期 </strong> program 是處理日期/時間的核心實用程序，包括 Unix 時間戳。不帶任何參數調用，它以人類可讀的格式返回當前日期/時間： </p> <pre><code class=\"hljs ruby\">$ date<br>Wed Feb 10 12:28:30 GMT 2021</code></pre> <p> 如果您需要 Unix 時間的當前日期/時間，請使用 <strong> +%s </strong> 爭論： </p> <pre><code class=\"hljs ruby\">$ date +%s<br>1612960114</code></pre> <p> 您可以使用以下命令將人類可讀的日期轉換為時間戳 <strong> -d </strong> 標記如果您的版本 <strong> 日期 </strong> 支持它。默認情況下，大多數 Linux 版本應該： </p> <pre><code class=\"hljs ruby\">$ date -d \"Jan 2 1970\" +%s<br>82800</code></pre> <p> 在 macOS 上， <strong> 日期 </strong> 是一個不同的程序，它需要一組不同的標誌： </p> <pre><code class=\"hljs perl\">$ date -j -f \"%b %d %Y %T\" \"Jan 02 1970 00:00:00\" \"+%s\"<br>82800</code></pre> <p> 另一方面，您可以使用 Unix 時間戳轉換 <strong> -r </strong> 旗幟： </p> <pre><code class=\"hljs ruby\">$ date -r 1600000000<br>Sun 13 Sep 2020 13:26:40 BST</code></pre> <p> 其他一些程序使用 <strong> %s </strong> 處理 Unix 時間的格式。例如，如果要以 Unix 時間顯示文件的修改日期，則使用 <a href=\"https://www.makeuseof.com/ls-command-linux/\" target=\"_blank\" rel=\"nofollow noopener\"> Linux 版本 <strong> ls </strong></a> ，您可以使用以下內容： </p> <pre><code class=\"hljs perl\">$ ls -l --time-style=+%s index.tmp.html<br>-rw-r--r-- 1 ubuntu ubuntu 17862 1521649818 index.tmp.html</code></pre> <p> </p> <h2 id=\"how-to-use-unix-time-in-programming-languages\"> 如何在編程語言中使用 Unix 時間 </h2> <p> PHP 有 <strong> 時間（） </strong> 返回當前 Unix 時間戳的函數。它的 <strong> 日期（） </strong> 函數將時間戳作為其第二個參數： </p> <pre><code class=\"hljs ruby\">$ php -r 'echo date(\"Y-m-d\", time());'<br>2021-02-11</code></pre> <p> JavaScript 以一種有趣的方式處理事情。它有一個 <strong> 日期.now() </strong> 獲取自 Unix 紀元以來的毫秒數的方法。當然，您可以將其除以 1,000 並將結果四捨五入以給出等效的 Unix 時間（以秒為單位）： </p> <pre><code class=\"hljs perl\">> Math.floor(Date.now() / 1000)<br>1613083012</code></pre> <p> </p> <h2 id=\"understanding-unix-time\"> 理解 Unix 時間 </h2> <p> Unix 時間是一個簡單的概念，出現在很多地方。一旦你理解了它，你可能會發現它非常有用，例如在計算時差時。您還可以識別何時可能是某些錯誤的原因。 </p> <p> 紀元和時間戳等概念是 Linux 入門的重要組成部分。要了解有關必需品的更多信息，例如 <strong> ls </strong> ，查看我們的基本 Linux 命令指南。 </p>"}